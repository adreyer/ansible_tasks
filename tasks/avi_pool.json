{
  "input_method": "stdin", 
  "description": "This module is used to configure Pool object", 
  "parameters": {
    "lb_algorithm": {
      "type": "Optional[String[0]]", 
      "description": "The load balancing algorithm will pick a server within the pool's list of available servers."
    }, 
    "use_service_port": {
      "type": "Optional[String[0]]", 
      "description": "Do not translate the client's destination port when sending the connection to the server."
    }, 
    "rewrite_host_header_to_server_name": {
      "type": "Optional[String[0]]", 
      "description": "Rewrite incoming host header to server name of the server to which the request is proxied."
    }, 
    "host_check_enabled": {
      "type": "Optional[String[0]]", 
      "description": "Enable common name check for server certificate."
    }, 
    "enabled": {
      "type": "Optional[String[0]]", 
      "description": "Enable or disable the pool."
    }, 
    "rewrite_host_header_to_sni": {
      "type": "Optional[String[0]]", 
      "description": "If sni server name is specified, rewrite incoming host header to the sni server name."
    }, 
    "capacity_estimation": {
      "type": "Optional[String[0]]", 
      "description": "Inline estimation of capacity of servers."
    }, 
    "max_conn_rate_per_server": {
      "type": "Optional[String[0]]", 
      "description": "Rate limit connections to each server."
    }, 
    "servers": {
      "type": "Optional[String[0]]", 
      "description": "The pool directs load balanced traffic to this list of destination servers."
    }, 
    "fewest_tasks_feedback_delay": {
      "type": "Optional[String[0]]", 
      "description": "Periodicity of feedback for fewest tasks server selection algorithm."
    }, 
    "server_auto_scale": {
      "type": "Optional[String[0]]", 
      "description": "Server autoscale."
    }, 
    "ipaddrgroup_ref": {
      "type": "Optional[String[0]]", 
      "description": "Use list of servers from ip address group."
    }, 
    "ab_pool": {
      "type": "Optional[String[0]]", 
      "description": "A/b pool configuration."
    }, 
    "capacity_estimation_ttfb_thresh": {
      "type": "Optional[String[0]]", 
      "description": "The maximum time-to-first-byte of a server."
    }, 
    "fail_action": {
      "type": "Optional[String[0]]", 
      "description": "Enable an action - close connection, http redirect, local http response, or backup pool - when a pool failure happens."
    }, 
    "apic_epg_name": {
      "type": "Optional[String[0]]", 
      "description": "Synchronize cisco apic epg members with pool servers."
    }, 
    "networks": {
      "type": "Optional[String[0]]", 
      "description": "(internal-use) networks designated as containing servers for this pool."
    }, 
    "lb_algorithm_hash": {
      "type": "Optional[String[0]]", 
      "description": "Criteria used as a key for determining the hash between the client and  server."
    }, 
    "ssl_profile_ref": {
      "type": "Optional[String[0]]", 
      "description": "When enabled, avi re-encrypts traffic to the backend servers."
    }, 
    "sni_enabled": {
      "type": "Optional[String[0]]", 
      "description": "Enable tls sni for server connections."
    }, 
    "server_name": {
      "type": "Optional[String[0]]", 
      "description": "Fully qualified dns hostname which will be used in the tls sni extension in server connections if sni is enabled."
    }, 
    "health_monitor_refs": {
      "type": "Optional[String[0]]", 
      "description": "Verify server health by applying one or more health monitors."
    }, 
    "cloud_ref": {
      "type": "Optional[String[0]]", 
      "description": "It is a reference to an object of type cloud."
    }, 
    "autoscale_policy_ref": {
      "type": "Optional[String[0]]", 
      "description": "Reference to server autoscale policy."
    }, 
    "domain_name": {
      "type": "Optional[String[0]]", 
      "description": "Comma separated list of domain names which will be used to verify the common names or subject alternative names presented by server certificates."
    }, 
    "created_by": {
      "type": "Optional[String[0]]", 
      "description": "Creator name."
    }, 
    "placement_networks": {
      "type": "Optional[String[0]]", 
      "description": "Manually select the networks and subnets used to provide reachability to the pool's servers."
    }, 
    "graceful_disable_timeout": {
      "type": "Optional[String[0]]", 
      "description": "Used to gracefully disable a server."
    }, 
    "state": {
      "type": "Optional[Enum[\"absent\", \"present\"]]", 
      "description": "The state that should be applied on the entity."
    }, 
    "nsx_securitygroup": {
      "type": "Optional[String[0]]", 
      "description": "A list of nsx service groups where the servers for the pool are created."
    }, 
    "a_pool": {
      "type": "Optional[String[0]]", 
      "description": "Name of container cloud application that constitutes a pool in a a-b pool configuration, if different from vs app."
    }, 
    "pki_profile_ref": {
      "type": "Optional[String[0]]", 
      "description": "Avi will validate the ssl certificate present by a server against the selected pki profile."
    }, 
    "api_version": {
      "type": "Optional[String[0]]", 
      "description": "Avi API version of to use for Avi API and objects."
    }, 
    "east_west": {
      "type": "Optional[String[0]]", 
      "description": "Inherited config from virtualservice."
    }, 
    "username": {
      "type": "Optional[String[0]]", 
      "description": "Username used for accessing Avi controller. The default value is the environment variable C(AVI_USERNAME)."
    }, 
    "application_persistence_profile_ref": {
      "type": "Optional[String[0]]", 
      "description": "Persistence will ensure the same user sticks to the same server for a desired duration of time."
    }, 
    "inline_health_monitor": {
      "type": "Optional[String[0]]", 
      "description": "The passive monitor will monitor client to server connections and requests and adjust traffic load to servers based on successful responses."
    }, 
    "default_server_port": {
      "type": "Optional[String[0]]", 
      "description": "Traffic sent to servers will use this destination server port unless overridden by the server's specific port attribute."
    }, 
    "description": {
      "type": "Optional[String[0]]", 
      "description": "A description of the pool."
    }, 
    "request_queue_depth": {
      "type": "Optional[String[0]]", 
      "description": "Minimum number of requests to be queued when pool is full."
    }, 
    "server_reselect": {
      "type": "Optional[String[0]]", 
      "description": "Server reselect configuration for http requests."
    }, 
    "ab_priority": {
      "type": "Optional[String[0]]", 
      "description": "Priority of this pool in a a-b pool pair."
    }, 
    "controller": {
      "type": "Optional[String[0]]", 
      "description": "IP address or hostname of the controller. The default value is the environment variable C(AVI_CONTROLLER)."
    }, 
    "ssl_key_and_certificate_ref": {
      "type": "Optional[String[0]]", 
      "description": "Service engines will present a client ssl certificate to the server."
    }, 
    "password": {
      "type": "Optional[String[0]]", 
      "description": "Password of Avi user in Avi controller. The default value is the environment variable C(AVI_PASSWORD)."
    }, 
    "server_count": {
      "type": "Optional[String[0]]", 
      "description": "Number of server_count."
    }, 
    "tenant": {
      "type": "Optional[String[0]]", 
      "description": "Name of tenant used for all Avi API calls and context of object."
    }, 
    "uuid": {
      "type": "Optional[String[0]]", 
      "description": "Uuid of the pool."
    }, 
    "request_queue_enabled": {
      "type": "Optional[String[0]]", 
      "description": "Enable request queue when pool is full."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "The name of the pool."
    }, 
    "max_concurrent_connections_per_server": {
      "type": "Optional[String[0]]", 
      "description": "The maximum number of concurrent connections allowed to each server within the pool."
    }, 
    "url": {
      "type": "Optional[String[0]]", 
      "description": "Avi controller URL of the object."
    }, 
    "autoscale_launch_config_ref": {
      "type": "Optional[String[0]]", 
      "description": "If configured then avi will trigger orchestration of pool server creation and deletion."
    }, 
    "tenant_ref": {
      "type": "Optional[String[0]]", 
      "description": "It is a reference to an object of type tenant."
    }, 
    "autoscale_networks": {
      "type": "Optional[String[0]]", 
      "description": "Network ids for the launch configuration."
    }, 
    "lb_algorithm_consistent_hash_hdr": {
      "type": "Optional[String[0]]", 
      "description": "Http header name to be used for the hash key."
    }, 
    "connection_ramp_duration": {
      "type": "Optional[String[0]]", 
      "description": "Duration for which new connections will be gradually ramped up to a server recently brought online."
    }, 
    "cloud_config_cksum": {
      "type": "Optional[String[0]]", 
      "description": "Checksum of cloud configuration for pool."
    }, 
    "vrf_ref": {
      "type": "Optional[String[0]]", 
      "description": "Virtual routing context that the pool is bound to."
    }, 
    "tenant_uuid": {
      "type": "Optional[String[0]]", 
      "description": "UUID of tenant used for all Avi API calls and context of object."
    }, 
    "prst_hdr_name": {
      "type": "Optional[String[0]]", 
      "description": "Header name for custom header persistence."
    }
  }
}