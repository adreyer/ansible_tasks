{
  "input_method": "stdin", 
  "description": "Create, update, stop and start a virtual machine. Provide an existing storage account and network interface or allow the module to create these for you. If you choose not to provide a network interface, the resource group must contain a virtual network with at least one subnet.", 
  "parameters": {
    "resource_group": {
      "type": "String[0]", 
      "description": "Name of the resource group containing the virtual machine."
    }, 
    "public_ip_allocation_method": {
      "type": "Optional[Enum[\"Dynamic\", \"Static\"]]", 
      "description": "If a public IP address is created when creating the VM (because a Network Interface was not provided), determines if the public IP address remains permanently associated with the Network Interface. If set to 'Dynamic' the public IP address may change any time the VM is rebooted or power cycled."
    }, 
    "image": {
      "type": "String[0]", 
      "description": "A dictionary describing the Marketplace image used to build the VM. Will contain keys: publisher, offer, sku and version. NOTE: set image.version to 'latest' to get the most recent version of a given image."
    }, 
    "ssh_public_keys": {
      "type": "Optional[String[0]]", 
      "description": "For os_type Linux provide a list of SSH keys. Each item in the list should be a dictionary where the dictionary contains two keys: path and key_data. Set the path to the default location of the authorized_keys files. On an Enterprise Linux host, for example, the path will be /home/<admin username>/.ssh/authorized_keys. Set key_data to the actual value of the public key."
    }, 
    "storage_container_name": {
      "type": "Optional[String[0]]", 
      "description": "Name of the container to use within the storage account to store VHD blobs. If no name is specified a default container will created."
    }, 
    "allocated": {
      "type": "Optional[String[0]]", 
      "description": "Toggle that controls if the machine is allocated/deallocated, only useful with state='present'."
    }, 
    "ssh_password_enabled": {
      "type": "Optional[String[0]]", 
      "description": "When the os_type is Linux, setting ssh_password_enabled to false will disable SSH password authentication and require use of SSH keys."
    }, 
    "storage_blob_name": {
      "type": "Optional[String[0]]", 
      "description": "Name fo the storage blob used to hold the VM's OS disk image. If no name is provided, defaults to the VM name + '.vhd'. If you provide a name, it must end with '.vhd'"
    }, 
    "remove_on_absent": {
      "type": "Optional[String[0]]", 
      "description": "When removing a VM using state 'absent', also remove associated resources"
    }, 
    "append_tags": {
      "type": "Optional[String[0]]", 
      "description": "Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
    }, 
    "ad_user": {
      "type": "Optional[String[0]]", 
      "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
    }, 
    "secret": {
      "type": "Optional[String[0]]", 
      "description": "Azure client secret. Use when authenticating with a Service Principal."
    }, 
    "short_hostname": {
      "type": "Optional[String[0]]", 
      "description": "Name assigned internally to the host. On a linux VM this is the name returned by the `hostname` command. When creating a virtual machine, short_hostname defaults to name."
    }, 
    "started": {
      "type": "Optional[String[0]]", 
      "description": "Use with state 'present' to start the machine. Set to false to have the machine be 'stopped'."
    }, 
    "state": {
      "type": "Optional[Enum[\"absent\", \"present\"]]", 
      "description": "Assert the state of the virtual machine."
    }, 
    "subnet_name": {
      "type": "Optional[String[0]]", 
      "description": "When creating a virtual machine, if a network interface name is not provided, one will be created. The new network interface will be assigned to the first subnet found in the virtual network. Use this parameter to provide a specific subnet instead."
    }, 
    "admin_password": {
      "type": "Optional[String[0]]", 
      "description": "Password for the admin username. Not required if the os_type is Linux and SSH password authentication is disabled by setting ssh_password_enabled to false."
    }, 
    "network_interface_names": {
      "type": "Optional[String[0]]", 
      "description": "List of existing network interface names to add to the VM. If a network interface name is not provided when the VM is created, a default network interface will be created. In order for the module to create a network interface, at least one Virtual Network with one Subnet must exist."
    }, 
    "subscription_id": {
      "type": "Optional[String[0]]", 
      "description": "Your Azure subscription Id."
    }, 
    "location": {
      "type": "Optional[String[0]]", 
      "description": "Valid Azure location. Defaults to location of the resource group."
    }, 
    "profile": {
      "type": "Optional[String[0]]", 
      "description": "Security profile found in ~/.azure/credentials file."
    }, 
    "tags": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.\n"
    }, 
    "virtual_network_name": {
      "type": "Optional[String[0]]", 
      "description": "When creating a virtual machine, if a network interface name is not provided, one will be created. The new network interface will be assigned to the first virtual network found in the resource group. Use this parameter to provide a specific virtual network instead."
    }, 
    "open_ports": {
      "type": "Optional[String[0]]", 
      "description": "If a network interface is created when creating the VM, a security group will be created as well. For Linux hosts a rule will be added to the security group allowing inbound TCP connections to the default SSH port 22, and for Windows hosts ports 3389 and 5986 will be opened. Override the default open ports by providing a list of ports."
    }, 
    "client_id": {
      "type": "Optional[String[0]]", 
      "description": "Azure client ID. Use when authenticating with a Service Principal."
    }, 
    "vm_size": {
      "type": "Optional[String[0]]", 
      "description": "A valid Azure VM size value. For example, 'Standard_D4'. The list of choices varies depending on the subscription and location. Check your subscription for available choices."
    }, 
    "password": {
      "type": "Optional[String[0]]", 
      "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
    }, 
    "tenant": {
      "type": "Optional[String[0]]", 
      "description": "Azure tenant ID. Use when authenticating with a Service Principal."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "Name of the virtual machine."
    }, 
    "restarted": {
      "type": "Optional[String[0]]", 
      "description": "Use with state 'present' to restart a running VM."
    }, 
    "admin_username": {
      "type": "Optional[String[0]]", 
      "description": "Admin username used to access the host after it is created. Required when creating a VM."
    }, 
    "os_type": {
      "type": "Optional[Enum[\"Windows\", \"Linux\"]]", 
      "description": "Base type of operating system."
    }, 
    "storage_account_name": {
      "type": "Optional[String[0]]", 
      "description": "Name of an existing storage account that supports creation of VHD blobs. If not specified for a new VM, a new storage account named <vm name>01 will be created using storage type 'Standard_LRS'."
    }, 
    "os_disk_caching": {
      "type": "Optional[Enum[\"ReadOnly\", \"ReadWrite\"]]", 
      "description": "Type of OS disk caching."
    }
  }
}