{
  "description": "Manage LTM virtual addresses on a BIG-IP.", 
  "parameters": {
    "icmp_echo": {
      "type": "Optional[String]", 
      "description": "Specifies how the systems sends responses to (ICMP) echo requests on a per-virtual address basis for enabling route advertisement. When C(enabled), the BIG-IP system intercepts ICMP echo request packets and responds to them directly. When C(disabled), the BIG-IP system passes ICMP echo requests through to the backend servers. When (selective), causes the BIG-IP system to internally enable or disable responses based on virtual server state; C(when_any_available), C(when_all_available, or C(always), regardless of the state of any virtual servers."
    }, 
    "auto_delete": {
      "type": "Optional[String]", 
      "description": "Specifies whether the system automatically deletes the virtual address with the deletion of the last associated virtual server. When C(disabled), specifies that the system leaves the virtual address even when all associated virtual servers have been deleted. When creating the virtual address, the default value is C(enabled)."
    }, 
    "connection_limit": {
      "type": "Optional[String]", 
      "description": "Specifies the number of concurrent connections that the system allows on this virtual address."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "The virtual address state. If C(absent), an attempt to delete the virtual address will be made. This will only succeed if this virtual address is not in use by a virtual server. C(present) creates the virtual address and enables it. If C(enabled), enable the virtual address if it exists. If C(disabled), create the virtual address if needed, and set state to C(disabled)."
    }, 
    "server": {
      "type": "String", 
      "description": "The BIG-IP host. This option can be omitted if the environment variable C(F5_SERVER) is set."
    }, 
    "netmask": {
      "type": "Optional[String]", 
      "description": "Netmask of the provided virtual address. This value cannot be modified after it is set."
    }, 
    "arp_state": {
      "type": "Optional[String]", 
      "description": "Specifies whether the system accepts ARP requests. When (disabled), specifies that the system does not accept ARP requests. Note that both ARP and ICMP Echo must be disabled in order for forwarding virtual servers using that virtual address to forward ICMP packets. If (enabled), then the packets are dropped."
    }, 
    "user": {
      "type": "String", 
      "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device. This option can be omitted if the environment variable C(F5_USER) is set."
    }, 
    "server_port": {
      "type": "Optional[String]", 
      "description": "The BIG-IP server port. This option can be omitted if the environment variable C(F5_SERVER_PORT) is set."
    }, 
    "address": {
      "type": "String", 
      "description": "Virtual address. This value cannot be modified after it is set."
    }, 
    "password": {
      "type": "String", 
      "description": "The password for the user account used to connect to the BIG-IP. This option can be omitted if the environment variable C(F5_PASSWORD) is set."
    }, 
    "validate_certs": {
      "type": "Optional[String]", 
      "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates. This option can be omitted if the environment variable C(F5_VALIDATE_CERTS) is set."
    }, 
    "use_route_advertisement": {
      "type": "Optional[String]", 
      "description": "Specifies whether the system uses route advertisement for this virtual address. When disabled, the system does not advertise routes for this virtual address."
    }, 
    "advertise_route": {
      "type": "Optional[String]", 
      "description": "Specifies what routes of the virtual address the system advertises. When C(when_any_available), advertises the route when any virtual server is available. When C(when_all_available), advertises the route when all virtual servers are available. When (always), always advertises the route regardless of the virtual servers available."
    }
  }
}