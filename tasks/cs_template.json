{
  "input_method": "stdin", 
  "description": "Register a template from URL, create a template from a ROOT volume of a stopped VM or its snapshot, extract and delete templates.", 
  "parameters": {
    "domain": {
      "type": "Optional[String[0]]", 
      "description": "Domain the template, snapshot or VM is related to."
    }, 
    "api_http_method": {
      "type": "Optional[Enum[\"get\", \"post\"]]", 
      "description": "HTTP method used."
    }, 
    "is_featured": {
      "type": "Optional[String[0]]", 
      "description": "Register the template to be featured."
    }, 
    "is_extractable": {
      "type": "Optional[String[0]]", 
      "description": "True if the template or its derivatives are extractable."
    }, 
    "hypervisor": {
      "type": "Optional[Enum[\"KVM\", \"VMware\", \"BareMetal\", \"XenServer\", \"LXC\", \"HyperV\", \"UCS\", \"OVM\"]]", 
      "description": "Name the hypervisor to be used for creating the new template."
    }, 
    "poll_async": {
      "type": "Optional[String[0]]", 
      "description": "Poll async jobs until job has finished."
    }, 
    "api_url": {
      "type": "Optional[String[0]]", 
      "description": "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
    }, 
    "zone": {
      "type": "Optional[String[0]]", 
      "description": "Name of the zone you wish the template to be registered or deleted from."
    }, 
    "sshkey_enabled": {
      "type": "Optional[String[0]]", 
      "description": "True if the template supports the sshkey upload feature."
    }, 
    "is_dynamically_scalable": {
      "type": "Optional[String[0]]", 
      "description": "Register the template having XS/VMWare tools installed in order to support dynamic scaling of VM CPU/memory."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\", \"extacted\"]]", 
      "description": "State of the template."
    }, 
    "is_ready": {
      "type": "Optional[String[0]]", 
      "description": "This flag is used for searching existing templates."
    }, 
    "details": {
      "type": "Optional[String[0]]", 
      "description": "Template details in key/value pairs."
    }, 
    "is_routing": {
      "type": "Optional[String[0]]", 
      "description": "True if the template type is routing i.e., if template is used to deploy router."
    }, 
    "api_key": {
      "type": "Optional[String[0]]", 
      "description": "API key of the CloudStack API."
    }, 
    "bits": {
      "type": "Optional[String[0]]", 
      "description": "32 or 64 bits support."
    }, 
    "format": {
      "type": "Optional[Enum[\"QCOW2\", \"RAW\", \"VHD\", \"OVA\"]]", 
      "description": "The format for the template."
    }, 
    "api_secret": {
      "type": "Optional[String[0]]", 
      "description": "Secret key of the CloudStack API."
    }, 
    "api_timeout": {
      "type": "Optional[String[0]]", 
      "description": "HTTP timeout."
    }, 
    "vm": {
      "type": "Optional[String[0]]", 
      "description": "VM name the template will be created from its volume or alternatively from a snapshot."
    }, 
    "is_public": {
      "type": "Optional[String[0]]", 
      "description": "Register the template to be publicly available to all users."
    }, 
    "tags": {
      "type": "Optional[String[0]]", 
      "description": "List of tags. Tags are a list of dictionaries having keys C(key) and C(value)."
    }, 
    "password_enabled": {
      "type": "Optional[String[0]]", 
      "description": "True if the template supports the password reset feature."
    }, 
    "display_text": {
      "type": "Optional[String[0]]", 
      "description": "Display text of the template."
    }, 
    "account": {
      "type": "Optional[String[0]]", 
      "description": "Account the template, snapshot or VM is related to."
    }, 
    "template_tag": {
      "type": "Optional[String[0]]", 
      "description": "the tag for this template."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "Name of the template."
    }, 
    "requires_hvm": {
      "type": "Optional[String[0]]", 
      "description": "true if this template requires HVM."
    }, 
    "template_filter": {
      "type": "Optional[Enum[\"featured\", \"self\", \"selfexecutable\", \"sharedexecutable\", \"executable\", \"community\"]]", 
      "description": "Name of the filter used to search for the template."
    }, 
    "api_region": {
      "type": "Optional[String[0]]", 
      "description": "Name of the ini section in the C(cloustack.ini) file."
    }, 
    "cross_zones": {
      "type": "Optional[String[0]]", 
      "description": "Whether the template should be synced or removed across zones."
    }, 
    "project": {
      "type": "Optional[String[0]]", 
      "description": "Name of the project the template to be registered in."
    }, 
    "url": {
      "type": "Optional[String[0]]", 
      "description": "URL of where the template is hosted on C(state=present)."
    }, 
    "snapshot": {
      "type": "Optional[String[0]]", 
      "description": "Name of the snapshot, created from the VM ROOT volume, the template will be created from."
    }, 
    "mode": {
      "type": "Optional[Enum[\"http_download\", \"ftp_upload\"]]", 
      "description": "Mode for the template extraction."
    }, 
    "checksum": {
      "type": "Optional[String[0]]", 
      "description": "The MD5 checksum value of this template."
    }, 
    "os_type": {
      "type": "Optional[String[0]]", 
      "description": "OS type that best represents the OS of this template."
    }
  }
}