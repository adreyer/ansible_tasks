{
  "description": "Manages Datadog monitors", 
  "parameters": {
    "notify_audit": {
      "type": "Optional[String]", 
      "description": "A boolean indicating whether tagged users will be notified on changes to this monitor."
    }, 
    "locked": {
      "type": "Optional[String]", 
      "description": "A boolean indicating whether changes to this monitor should be restricted to the creator or admins."
    }, 
    "timeout_h": {
      "type": "Optional[String]", 
      "description": "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state."
    }, 
    "tags": {
      "type": "Optional[String]", 
      "description": "A list of tags to associate with your monitor when creating or updating. This can help you categorize and filter monitors."
    }, 
    "thresholds": {
      "type": "Optional[String]", 
      "description": "A dictionary of thresholds by status. This option is only available for service checks and metric alerts. Because each of them can have multiple thresholds, we don't define them directly in the query.\"]"
    }, 
    "silenced": {
      "type": "Optional[String]", 
      "description": "Dictionary of scopes to timestamps or None. Each scope will be muted until the given POSIX timestamp or forever if the value is None. "
    }, 
    "require_full_window": {
      "type": "Optional[String]", 
      "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set this to False for sparse metrics, otherwise some evaluations will be skipped."
    }, 
    "app_key": {
      "type": "String", 
      "description": "Your DataDog app key."
    }, 
    "notify_no_data": {
      "type": "Optional[String]", 
      "description": "A boolean indicating whether this monitor will notify when data stops reporting.."
    }, 
    "renotify_interval": {
      "type": "Optional[String]", 
      "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only re-notify if it's not resolved."
    }, 
    "state": {
      "type": "String", 
      "description": "The designated state of the monitor."
    }, 
    "no_data_timeframe": {
      "type": "Optional[String]", 
      "description": "The number of minutes before a monitor will notify when data stops reporting. Must be at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks."
    }, 
    "escalation_message": {
      "type": "Optional[String]", 
      "description": "A message to include with a re-notification. Supports the '@username' notification we allow elsewhere. Not applicable if renotify_interval is None"
    }, 
    "query": {
      "type": "Optional[String]", 
      "description": "The monitor query to notify on with syntax varying depending on what type of monitor you are creating."
    }, 
    "message": {
      "type": "Optional[String]", 
      "description": "A message to include with notifications for this monitor. Email notifications can be sent to specific users by using the same '@username' notation as events. Monitor message template variables can be accessed by using double square brackets, i.e '[[' and ']]'."
    }, 
    "api_key": {
      "type": "String", 
      "description": "Your DataDog API key."
    }, 
    "type": {
      "type": "Optional[String]", 
      "description": "The type of the monitor. The 'event alert'is available starting at Ansible 2.1"
    }, 
    "id": {
      "type": "Optional[String]", 
      "description": "The id of the alert. If set, will be used instead of the name to locate the alert."
    }, 
    "name": {
      "type": "String", 
      "description": "The name of the alert."
    }
  }
}