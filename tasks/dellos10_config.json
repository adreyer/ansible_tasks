{
  "description": "Manage Dell EMC Networking OS10 configuration sections", 
  "parameters": {
    "src": {
      "type": "Optional[String]", 
      "description": "Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root dir.  This argument is mutually exclusive with I(lines)."
    }, 
    "config": {
      "type": "Optional[String]", 
      "description": "The playbook designer can use the C(config) argument to supply the base configuration to be used to validate necessary configuration changes.  If you specify this argument, the module does not download the running-config from the remote node."
    }, 
    "after": {
      "type": "Optional[String]", 
      "description": "The ordered set of commands to append to the end of the command stack if a change needs to be made.  As with I(before), the playbook designer can use this argument  to append a set of commands to be executed after the command set."
    }, 
    "lines": {
      "type": "Optional[String]", 
      "description": "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config. Note the configuration command syntax as the device config parser automatically modifies some commands. This argument is mutually exclusive with I(src)."
    }, 
    "update": {
      "type": "Optional[String]", 
      "description": "The I(update) argument controls how the configuration statements are processed on the remote device.  Valid choices for the I(update) argument are I(merge) and I(check).  When you set the argument to I(merge), the configuration changes merge with the current device running configuration.  When you set the argument to I(check), the configuration updates are determined but not actually configured on the remote device."
    }, 
    "replace": {
      "type": "Optional[String]", 
      "description": "Instructs the module on the way to perform the configuration on the device. If you set the replace argument to I(line), then the modified lines push to the device in configuration mode.  If you set the replace argument to I(block), then the entire command block pushes to the device in configuration mode if any line is not correct."
    }, 
    "parents": {
      "type": "Optional[String]", 
      "description": "The ordered set of parents that uniquely identify the section the commands should be checked against.  If you omit the parents argument, the commands are checked against the set of top level or global commands."
    }, 
    "provider": {
      "type": "Optional[String]", 
      "description": "A dict object containing connection details."
    }, 
    "save": {
      "type": "Optional[String]", 
      "description": "The C(save) argument instructs the module to save the running- config to the startup-config at the conclusion of the module running.  If you specify check mode, this argument is ignored."
    }, 
    "backup": {
      "type": "Optional[String]", 
      "description": "This argument causes the module to create a full backup of the current C(running-config) from the remote device before any changes are made.  The backup file is written to the C(backup) folder in the playbook root directory.  If the directory does not exist, it is created."
    }, 
    "match": {
      "type": "Optional[String]", 
      "description": "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If you set match to I(line), commands match line by line.  If you set match to I(strict), command lines match by position.  If you set match to I(exact), command lines must be an equal match.  Finally, if you set match to I(none), the module does not attempt to compare the source configuration with the running configuration on the remote device."
    }, 
    "before": {
      "type": "Optional[String]", 
      "description": "The ordered set of commands to push on to the command stack if a change needs to be made.  The playbook designer can  use this argument to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system."
    }
  }
}