{
  "input_method": "stdin", 
  "description": "Manages a Django application using the I(manage.py) application frontend to I(django-admin). With the I(virtualenv) parameter, all management commands will be executed by the given I(virtualenv) installation.", 
  "parameters": {
    "virtualenv": {
      "type": "Optional[String[0]]", 
      "description": "An optional path to a I(virtualenv) installation to use while running the manage application."
    }, 
    "app_path": {
      "type": "String[0]", 
      "description": "The path to the root of the Django application where B(manage.py) lives."
    }, 
    "database": {
      "type": "Optional[String[0]]", 
      "description": "The database to target. Used by the 'createcachetable', 'flush', 'loaddata', and 'syncdb' commands."
    }, 
    "pythonpath": {
      "type": "Optional[String[0]]", 
      "description": "A directory to add to the Python path. Typically used to include the settings module if it is located external to the application directory."
    }, 
    "settings": {
      "type": "Optional[String[0]]", 
      "description": "The Python path to the application's settings module, such as 'myapp.settings'."
    }, 
    "apps": {
      "type": "Optional[String[0]]", 
      "description": "A list of space-delimited apps to target. Used by the 'test' command."
    }, 
    "cache_table": {
      "type": "Optional[String[0]]", 
      "description": "The name of the table used for database-backed caching. Used by the 'createcachetable' command."
    }, 
    "merge": {
      "type": "Optional[String[0]]", 
      "description": "Will run out-of-order or missing migrations as they are not rollback migrations, you can only use this parameter with 'migrate' command"
    }, 
    "command": {
      "type": "Enum[\"cleanup\", \"collectstatic\", \"flush\", \"loaddata\", \"migrate\", \"runfcgi\", \"syncdb\", \"test\", \"validate\"]", 
      "description": "The name of the Django management command to run. Built in commands are cleanup, collectstatic, flush, loaddata, migrate, runfcgi, syncdb, test, and validate."
    }, 
    "skip": {
      "type": "Optional[String[0]]", 
      "description": "Will skip over out-of-order missing migrations, you can only use this parameter with I(migrate)"
    }, 
    "link": {
      "type": "Optional[String[0]]", 
      "description": "Will create links to the files instead of copying them, you can only use this parameter with 'collectstatic' command"
    }, 
    "fixtures": {
      "type": "Optional[String[0]]", 
      "description": "A space-delimited list of fixture file names to load in the database. B(Required) by the 'loaddata' command."
    }, 
    "failfast": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Fail the command immediately if a test fails. Used by the 'test' command."
    }
  }
}