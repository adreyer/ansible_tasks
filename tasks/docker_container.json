{
  "input_method": "stdin", 
  "description": "Manage the life cycle of docker containers.", 
  "parameters": {
    "tty": {
      "type": "Optional[String[0]]", 
      "description": "Allocate a pseudo-TTY."
    }, 
    "dns_servers": {
      "type": "Optional[String[0]]", 
      "description": "List of custom DNS servers."
    }, 
    "links": {
      "type": "Optional[String[0]]", 
      "description": "List of name aliases for linked containers in the format C(container_name:alias)"
    }, 
    "oom_score_adj": {
      "type": "Optional[String[0]]", 
      "description": "An integer value containing the score given to the container in order to tune OOM killer preferences."
    }, 
    "volumes": {
      "type": "Optional[String[0]]", 
      "description": "List of volumes to mount within the container."
    }, 
    "ssl_version": {
      "type": "Optional[String[0]]", 
      "description": "Provide a valid SSL version number. Default value determined by docker-py, currently 1.0."
    }, 
    "image": {
      "type": "Optional[String[0]]", 
      "description": "Repository path and tag used to create the container. If an image is not found or pull is true, the image will be pulled from the registry. If no tag is included, 'latest' will be used."
    }, 
    "recreate": {
      "type": "Optional[String[0]]", 
      "description": "Use with present and started states to force the re-creation of an existing container."
    }, 
    "command": {
      "type": "Optional[String[0]]", 
      "description": "Command to execute when the container starts. A command may be either a string or a list. Prior to version 2.4, strings were split on commas."
    }, 
    "paused": {
      "type": "Optional[String[0]]", 
      "description": "Use with the started state to pause running processes inside the container."
    }, 
    "docker_host": {
      "type": "Optional[String[0]]", 
      "description": "The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.0.2.23:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'."
    }, 
    "cpuset_cpus": {
      "type": "Optional[String[0]]", 
      "description": "CPUs in which to allow execution C(1,3) or C(1-3)."
    }, 
    "dns_search_domains": {
      "type": "Optional[String[0]]", 
      "description": "List of custom DNS search domains."
    }, 
    "kernel_memory": {
      "type": "Optional[String[0]]", 
      "description": "Kernel memory limit (format: <number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g. Minimum is 4M."
    }, 
    "force_kill": {
      "type": "Optional[String[0]]", 
      "description": "Use the kill command when stopping a running container."
    }, 
    "pid_mode": {
      "type": "Optional[String[0]]", 
      "description": "Set the PID namespace mode for the container. Currently only supports 'host'."
    }, 
    "env_file": {
      "type": "Optional[String[0]]", 
      "description": "Path to a file containing environment variables I(FOO=BAR)."
    }, 
    "networks": {
      "type": "Optional[String[0]]", 
      "description": "List of networks the container belongs to."
    }, 
    "cpu_quota": {
      "type": "Optional[String[0]]", 
      "description": "Limit CPU CFS (Completely Fair Scheduler) quota"
    }, 
    "cpu_period": {
      "type": "Optional[String[0]]", 
      "description": "Limit CPU CFS (Completely Fair Scheduler) period"
    }, 
    "security_opts": {
      "type": "Optional[String[0]]", 
      "description": "List of security options in the form of C(\"label:user:User\")"
    }, 
    "keep_volumes": {
      "type": "Optional[String[0]]", 
      "description": "Retain volumes associated with a removed container."
    }, 
    "cpuset_mems": {
      "type": "Optional[String[0]]", 
      "description": "Memory nodes (MEMs) in which to allow execution C(0-3) or C(0,1)"
    }, 
    "hostname": {
      "type": "Optional[String[0]]", 
      "description": "Container hostname."
    }, 
    "restart_retries": {
      "type": "Optional[String[0]]", 
      "description": "Use with restart policy to control maximum number of restart attempts."
    }, 
    "state": {
      "type": "Optional[Enum[\"absent\", \"present\", \"stopped\", \"started\"]]", 
      "description": "I(absent) - A container matching the specified name will be stopped and removed. Use force_kill to kill the container rather than stopping it. Use keep_volumes to retain volumes associated with the removed container."
    }, 
    "capabilities": {
      "type": "Optional[String[0]]", 
      "description": "List of capabilities to add to the container."
    }, 
    "mac_address": {
      "type": "Optional[String[0]]", 
      "description": "Container MAC address (e.g. 92:d0:c6:0a:29:33)"
    }, 
    "working_dir": {
      "type": "Optional[String[0]]", 
      "description": "Path to the working directory."
    }, 
    "cleanup": {
      "type": "Optional[String[0]]", 
      "description": "Use with I(detach) to remove the container after successful execution."
    }, 
    "entrypoint": {
      "type": "Optional[String[0]]", 
      "description": "Command that overwrites the default ENTRYPOINT of the image."
    }, 
    "memory_swap": {
      "type": "Optional[String[0]]", 
      "description": "Total memory limit (memory + swap, format:<number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g."
    }, 
    "env": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary of key,value pairs."
    }, 
    "memory": {
      "type": "Optional[String[0]]", 
      "description": "Memory limit (format: <number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g"
    }, 
    "volumes_from": {
      "type": "Optional[String[0]]", 
      "description": "List of container names or Ids to get volumes from."
    }, 
    "ipc_mode": {
      "type": "Optional[String[0]]", 
      "description": "Set the IPC mode for the container. Can be one of 'container:<name|id>' to reuse another container's IPC namespace or 'host' to use the host's IPC namespace within the container."
    }, 
    "log_options": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary of options specific to the chosen log_driver. See https://docs.docker.com/engine/admin/logging/overview/ for details."
    }, 
    "privileged": {
      "type": "Optional[String[0]]", 
      "description": "Give extended privileges to the container."
    }, 
    "api_version": {
      "type": "Optional[String[0]]", 
      "description": "The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py."
    }, 
    "key_path": {
      "type": "Optional[String[0]]", 
      "description": "Path to the client's TLS key file."
    }, 
    "exposed_ports": {
      "type": "Optional[String[0]]", 
      "description": "List of additional container ports which informs Docker that the container listens on the specified network ports at runtime. If the port is already exposed using EXPOSE in a Dockerfile, it does not need to be exposed again."
    }, 
    "read_only": {
      "type": "Optional[String[0]]", 
      "description": "Mount the container's root file system as read-only."
    }, 
    "labels": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary of key value pairs."
    }, 
    "log_driver": {
      "type": "Optional[Enum[\"none\", \"json-file\", \"syslog\", \"journald\", \"gelf\", \"fluentd\", \"awslogs\", \"splunk\"]]", 
      "description": "Specify the logging driver. Docker uses json-file by default."
    }, 
    "oom_killer": {
      "type": "Optional[String[0]]", 
      "description": "Whether or not to disable OOM Killer for the container."
    }, 
    "shm_size": {
      "type": "Optional[String[0]]", 
      "description": "Size of `/dev/shm`. The format is `<number><unit>`. `number` must be greater than `0`. Unit is optional and can be `b` (bytes), `k` (kilobytes), `m` (megabytes), or `g` (gigabytes)."
    }, 
    "auto_remove": {
      "type": "Optional[String[0]]", 
      "description": "enable auto-removal of the container on daemon side when the container's process exits"
    }, 
    "memory_swappiness": {
      "type": "Optional[String[0]]", 
      "description": "Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100."
    }, 
    "kill_signal": {
      "type": "Optional[String[0]]", 
      "description": "Override default signal used to kill a running container."
    }, 
    "network_mode": {
      "type": "Optional[Enum[\"bridge\", \"container:<name|id>\", \"host\", \"none\"]]", 
      "description": "Connect the container to a network."
    }, 
    "tls_hostname": {
      "type": "Optional[String[0]]", 
      "description": "When verifying the authenticity of the Docker Host server, provide the expected name of the server."
    }, 
    "volume_driver": {
      "type": "Optional[String[0]]", 
      "description": "The container volume driver."
    }, 
    "user": {
      "type": "Optional[String[0]]", 
      "description": "Sets the username or UID used and optionally the groupname or GID for the specified command."
    }, 
    "groups": {
      "type": "Optional[String[0]]", 
      "description": "List of additional group names and/or IDs that the container process will run as."
    }, 
    "cert_path": {
      "type": "Optional[String[0]]", 
      "description": "Path to the client's TLS certificate file."
    }, 
    "stop_timeout": {
      "type": "Optional[String[0]]", 
      "description": "Number of seconds to wait for the container to stop before sending SIGKILL."
    }, 
    "detach": {
      "type": "Optional[String[0]]", 
      "description": "Enable detached mode to leave the container running in background. If disabled, the task will reflect the status of the container run (failed if the command failed)."
    }, 
    "restart": {
      "type": "Optional[String[0]]", 
      "description": "Use with started state to force a matching container to be stopped and restarted."
    }, 
    "tls": {
      "type": "Optional[String[0]]", 
      "description": "Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server."
    }, 
    "pull": {
      "type": "Optional[String[0]]", 
      "description": "If true, always pull the latest version of an image. Otherwise, will only pull an image when missing."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "Assign a name to a new container or match an existing container."
    }, 
    "cacert_path": {
      "type": "Optional[String[0]]", 
      "description": "Use a CA certificate when performing server verification by providing the path to a CA certificate file."
    }, 
    "stop_signal": {
      "type": "Optional[String[0]]", 
      "description": "Override default signal used to stop the container."
    }, 
    "blkio_weight": {
      "type": "Optional[String[0]]", 
      "description": "Block IO (relative weight), between 10 and 1000."
    }, 
    "trust_image_content": {
      "type": "Optional[String[0]]", 
      "description": "If true, skip image verification."
    }, 
    "restart_policy": {
      "type": "Optional[Enum[\"always\", \"False\", \"on-failure\", \"unless-stopped\"]]", 
      "description": "Container restart policy. Place quotes around I(no) option."
    }, 
    "ignore_image": {
      "type": "Optional[String[0]]", 
      "description": "When C(state) is I(present) or I(started) the module compares the configuration of an existing container to requested configuration. The evaluation includes the image version. If the image version in the registry does not match the container, the container will be recreated. Stop this behavior by setting C(ignore_image) to I(True)."
    }, 
    "devices": {
      "type": "Optional[String[0]]", 
      "description": "List of host device bindings to add to the container. Each binding is a mapping expressed in the format: <path_on_host>:<path_in_container>:<cgroup_permissions>"
    }, 
    "etc_hosts": {
      "type": "Optional[String[0]]", 
      "description": "Dict of host-to-IP mappings, where each host name is a key in the dictionary. Each host name will be added to the container's /etc/hosts file."
    }, 
    "uts": {
      "type": "Optional[String[0]]", 
      "description": "Set the UTS namespace mode for the container."
    }, 
    "tls_verify": {
      "type": "Optional[String[0]]", 
      "description": "Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server."
    }, 
    "memory_reservation": {
      "type": "Optional[String[0]]", 
      "description": "Memory soft limit (format: <number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g"
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "The maximum amount of time in seconds to wait on a response from the API."
    }, 
    "published_ports": {
      "type": "Optional[String[0]]", 
      "description": "List of ports to publish from the container to the host."
    }, 
    "purge_networks": {
      "type": "Optional[String[0]]", 
      "description": "Remove the container from ALL networks not included in C(networks) parameter."
    }, 
    "cpu_shares": {
      "type": "Optional[String[0]]", 
      "description": "CPU shares (relative weight)."
    }, 
    "ulimits": {
      "type": "Optional[String[0]]", 
      "description": "List of ulimit options. A ulimit is specified as C(nofile:262144:262144)"
    }, 
    "interactive": {
      "type": "Optional[String[0]]", 
      "description": "Keep stdin open after a container is launched, even if not attached."
    }
  }
}