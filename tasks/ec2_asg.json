{
  "input_method": "stdin", 
  "description": "Can create or delete AWS Autoscaling Groups", 
  "parameters": {
    "suspend_processes": {
      "type": "Optional[Enum[\"Launch\", \"Terminate\", \"HealthCheck\", \"ReplaceUnhealthy\", \"AZRebalance\", \"AlarmNotification\", \"ScheduledActions\", \"AddToLoadBalancer\"]]", 
      "description": "A list of scaling processes to suspend."
    }, 
    "default_cooldown": {
      "type": "Optional[String[0]]", 
      "description": "The number of seconds after a scaling activity completes before another can begin."
    }, 
    "health_check_period": {
      "type": "Optional[String[0]]", 
      "description": "Length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health."
    }, 
    "ec2_url": {
      "type": "Optional[String[0]]", 
      "description": "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
    }, 
    "aws_secret_key": {
      "type": "Optional[String[0]]", 
      "description": "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
    }, 
    "lc_check": {
      "type": "Optional[String[0]]", 
      "description": "Check to make sure instances that are being replaced with replace_instances do not already have the current launch_config."
    }, 
    "availability_zones": {
      "type": "Optional[String[0]]", 
      "description": "List of availability zone names in which to create the group.  Defaults to all the availability zones in the region if vpc_zone_identifier is not set."
    }, 
    "replace_batch_size": {
      "type": "Optional[String[0]]", 
      "description": "Number of instances you'd like to replace at a time.  Used with replace_all_instances."
    }, 
    "target_group_arns": {
      "type": "Optional[String[0]]", 
      "description": "List of target group ARNs to use for the group"
    }, 
    "replace_instances": {
      "type": "Optional[String[0]]", 
      "description": "List of instance_ids belonging to the named ASG that you would like to terminate and be replaced with instances matching the current launch configuration."
    }, 
    "desired_capacity": {
      "type": "Optional[String[0]]", 
      "description": "Desired number of instances in group, if unspecified then the current group value will be used."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "register or deregister the instance"
    }, 
    "health_check_type": {
      "type": "Optional[Enum[\"EC2\", \"ELB\"]]", 
      "description": "The service you want the health status from, Amazon EC2 or Elastic Load Balancer."
    }, 
    "max_size": {
      "type": "Optional[String[0]]", 
      "description": "Maximum number of instances in group, if unspecified then the current group value will be used."
    }, 
    "placement_group": {
      "type": "Optional[String[0]]", 
      "description": "Physical location of your cluster placement group created in Amazon EC2."
    }, 
    "profile": {
      "type": "Optional[String[0]]", 
      "description": "Uses a boto profile. Only works with boto >= 2.24.0."
    }, 
    "tags": {
      "type": "Optional[String[0]]", 
      "description": "A list of tags to add to the Auto Scale Group. Optional key is 'propagate_at_launch', which defaults to true."
    }, 
    "min_size": {
      "type": "Optional[String[0]]", 
      "description": "Minimum number of instances in group, if unspecified then the current group value will be used."
    }, 
    "wait_timeout": {
      "type": "Optional[String[0]]", 
      "description": "how long before wait instances to become viable when replaced.  Used in conjunction with instance_ids option."
    }, 
    "load_balancers": {
      "type": "Optional[String[0]]", 
      "description": "List of ELB names to use for the group"
    }, 
    "launch_config_name": {
      "type": "String[0]", 
      "description": "Name of the Launch configuration to use for the group. See the ec2_lc module for managing these. If unspecified then the current group value will be used."
    }, 
    "aws_access_key": {
      "type": "Optional[String[0]]", 
      "description": "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "Unique name for group to be created or deleted"
    }, 
    "security_token": {
      "type": "Optional[String[0]]", 
      "description": "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
    }, 
    "replace_all_instances": {
      "type": "Optional[String[0]]", 
      "description": "In a rolling fashion, replace all instances with an old launch configuration with one from the current launch configuration."
    }, 
    "wait_for_instances": {
      "type": "Optional[String[0]]", 
      "description": "Wait for the ASG instances to be in a ready state before exiting.  If instances are behind an ELB, it will wait until the ELB determines all instances have a lifecycle_state of  \"InService\" and  a health_status of \"Healthy\"."
    }, 
    "region": {
      "type": "Optional[String[0]]", 
      "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
    }, 
    "termination_policies": {
      "type": "Optional[Enum[\"OldestInstance\", \"NewestInstance\", \"OldestLaunchConfiguration\", \"ClosestToNextInstanceHour\", \"Default\"]]", 
      "description": "An ordered list of criteria used for selecting instances to be removed from the Auto Scaling group when reducing capacity."
    }, 
    "vpc_zone_identifier": {
      "type": "Optional[String[0]]", 
      "description": "List of VPC subnets to use"
    }, 
    "notification_topic": {
      "type": "Optional[String[0]]", 
      "description": "A SNS topic ARN to send auto scaling notifications to."
    }, 
    "notification_types": {
      "type": "Optional[String[0]]", 
      "description": "A list of auto scaling events to trigger notifications on."
    }, 
    "validate_certs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
    }
  }
}