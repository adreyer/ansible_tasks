{
  "input_method": "stdin", 
  "description": "Manage route tables for AWS virtual private clouds", 
  "parameters": {
    "profile": {
      "type": "Optional[String[0]]", 
      "description": "Uses a boto profile. Only works with boto >= 2.24.0."
    }, 
    "subnets": {
      "type": "String[0]", 
      "description": "An array of subnets to add to this route table. Subnets may be specified by either subnet ID, Name tag, or by a CIDR such as '10.0.0.0/24'."
    }, 
    "aws_access_key": {
      "type": "Optional[String[0]]", 
      "description": "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
    }, 
    "security_token": {
      "type": "Optional[String[0]]", 
      "description": "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
    }, 
    "tags": {
      "type": "Optional[String[0]]", 
      "description": "A dictionary of resource tags of the form: { tag1: value1, tag2: value2 }. Tags are used to uniquely identify route tables within a VPC when the route_table_id is not supplied."
    }, 
    "region": {
      "type": "Optional[String[0]]", 
      "description": "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
    }, 
    "purge_subnets": {
      "type": "Optional[String[0]]", 
      "description": "Purge existing subnets that are not found in subnets."
    }, 
    "aws_secret_key": {
      "type": "Optional[String[0]]", 
      "description": "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
    }, 
    "routes": {
      "type": "Optional[String[0]]", 
      "description": "List of routes in the route table. Routes are specified as dicts containing the keys 'dest' and one of 'gateway_id', 'instance_id', 'interface_id', or 'vpc_peering_connection_id'. If 'gateway_id' is specified, you can refer to the VPC's IGW by using the value 'igw'. Routes are required for present states."
    }, 
    "purge_routes": {
      "type": "Optional[String[0]]", 
      "description": "Purge existing routes that are not found in routes."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Create or destroy the VPC route table"
    }, 
    "lookup": {
      "type": "Optional[Enum[\"tag\", \"id\"]]", 
      "description": "Look up route table by either tags or by route table ID. Non-unique tag lookup will fail. If no tags are specifed then no lookup for an existing route table is performed and a new route table will be created. To change tags of a route table or delete a route table, you must look up by id."
    }, 
    "ec2_url": {
      "type": "Optional[String[0]]", 
      "description": "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
    }, 
    "route_table_id": {
      "type": "Optional[String[0]]", 
      "description": "The ID of the route table to update or delete."
    }, 
    "vpc_id": {
      "type": "String[0]", 
      "description": "VPC ID of the VPC in which to create the route table."
    }, 
    "validate_certs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
    }, 
    "propagating_vgw_ids": {
      "type": "Optional[String[0]]", 
      "description": "Enable route propagation from virtual gateways specified by ID."
    }
  }
}