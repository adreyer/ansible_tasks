{
  "input_method": "stdin", 
  "description": "Sends an arbitrary set of commands to an EOS node and returns the results read from the device.  This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.", 
  "parameters": {
    "authorize": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
    }, 
    "retries": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the number of retries a command should be tried before it is considered failed.  The command is run on the target device every retry and evaluated against the I(wait_for) conditionals."
    }, 
    "commands": {
      "type": "String[0]", 
      "description": "The commands to send to the remote EOS device over the configured provider.  The resulting output from the command is returned.  If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of I(retries) has been exceeded."
    }, 
    "auth_pass": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
    }, 
    "interval": {
      "type": "Optional[String[0]]", 
      "description": "Configures the interval in seconds to wait between retries of the command.  If the command does not pass the specified conditional, the interval indicates how to long to wait before trying the command again."
    }, 
    "provider": {
      "type": "Optional[String[0]]", 
      "description": "A dict object containing connection details."
    }, 
    "wait_for": {
      "type": "Optional[String[0]]", 
      "description": "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional to be true before moving forward.   If the conditional is not true by the configured retries, the task fails.  See examples."
    }, 
    "match": {
      "type": "Optional[Enum[\"any\", \"all\"]]", 
      "description": "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the I(wait_for) must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied."
    }
  }
}