{
  "input_method": "stdin", 
  "description": "Manages network device configurations over SSH or eos_local.  This module allows implementers to work with the device running-config.  It provides a way to push a set of commands onto a network device by evaluating the current running-config and only pushing configuration commands that are not already configured.  The config source can be a set of commands or a template.", 
  "parameters": {
    "authorize": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
    }, 
    "src": {
      "type": "String[0]", 
      "description": "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
    }, 
    "force": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
    }, 
    "config": {
      "type": "Optional[String[0]]", 
      "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison."
    }, 
    "auth_pass": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
    }, 
    "replace": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "This argument will cause the provided configuration to be replaced on the destination node.   The use of the replace argument will always cause the task to set changed to true and will implies C(force=true).  This argument is only valid with C(transport=eos_local)."
    }, 
    "include_defaults": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "By default when the M(eos_template) connects to the remote device to retrieve the configuration it will issue the C(show running-config) command.  If this option is set to True then the issued command will be C(show running-config all)."
    }, 
    "provider": {
      "type": "Optional[String[0]]", 
      "description": "A dict object containing connection details."
    }, 
    "backup": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backup_{{ hostname }} in the root of the playbook directory."
    }
  }
}