{
  "description": "Manage the collection of local users on EOS devices", 
  "parameters": {
    "authorize": {
      "type": "Optional[String]", 
      "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
    }, 
    "username": {
      "type": "Optional[String]", 
      "description": "The username to be configured on the remote Arista EOS device.  This argument accepts a stringv value and is mutually exclusive with the C(users) argument. Please note that this option is not same as C(provider username)."
    }, 
    "update_password": {
      "type": "Optional[String]", 
      "description": "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created."
    }, 
    "users": {
      "type": "Optional[String]", 
      "description": "The set of username objects to be configured on the remote Arista EOS device.  The list entries can either be the username or a hash of username and properties.  This argument is mutually exclusive with the C(username) argument."
    }, 
    "auth_pass": {
      "type": "Optional[String]", 
      "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
    }, 
    "purge": {
      "type": "Optional[Boolean]", 
      "description": "Instructs the module to consider the resource definition absolute.  It will remove any previously configured usernames on the device with the exception of the `admin` user which cannot be deleted per EOS constraints."
    }, 
    "privilege": {
      "type": "Optional[String]", 
      "description": "The C(privilege) argument configures the privilege level of the user when logged into the system.  This argument accepts integer values in the range of 1 to 15."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Configures the state of the username definition as it relates to the device operational configuration.  When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration"
    }, 
    "role": {
      "type": "Optional[String]", 
      "description": "Configures the role for the username in the device running configuration.  The argument accepts a string value defining the role name.  This argument does not check if the role has been configured on the device."
    }, 
    "provider": {
      "type": "Optional[String]", 
      "description": "A dict object containing connection details."
    }, 
    "nopassword": {
      "type": "Optional[Boolean]", 
      "description": "Defines the username without assigning a password.  This will allow the user to login to the system without being authenticated by a password."
    }, 
    "password": {
      "type": "Optional[String]", 
      "description": "The password to be configured on the remote Arista EOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this option is not same as C(provider password)."
    }, 
    "sshkey": {
      "type": "Optional[String]", 
      "description": "Specifies the SSH public key to configure for the given username.  This argument accepts a valid SSH key value."
    }
  }
}