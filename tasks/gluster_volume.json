{
  "input_method": "stdin", 
  "description": "Create, remove, start, stop and tune GlusterFS volumes", 
  "parameters": {
    "force": {
      "type": "Optional[String[0]]", 
      "description": "If brick is being created in the root partition, module will fail. Set force to true to override this behaviour"
    }, 
    "name": {
      "type": "String[0]", 
      "description": "The volume name"
    }, 
    "replicas": {
      "type": "Optional[String[0]]", 
      "description": "Replica count for volume"
    }, 
    "bricks": {
      "type": "Optional[String[0]]", 
      "description": "Brick paths on servers. Multiple brick paths can be separated by commas"
    }, 
    "disperses": {
      "type": "Optional[String[0]]", 
      "description": "Disperse count for volume"
    }, 
    "quota": {
      "type": "Optional[String[0]]", 
      "description": "Quota value for limit-usage (be sure to use 10.0MB instead of 10MB, see quota list)"
    }, 
    "stripes": {
      "type": "Optional[String[0]]", 
      "description": "Stripe count for volume"
    }, 
    "cluster": {
      "type": "Optional[String[0]]", 
      "description": "List of hosts to use for probing and brick setup"
    }, 
    "host": {
      "type": "Optional[String[0]]", 
      "description": "Override local hostname (for peer probing purposes)"
    }, 
    "state": {
      "type": "Enum[\"present\", \"absent\", \"started\", \"stopped\"]", 
      "description": "Use present/absent ensure if a volume exists or not, use started/stopped to control it's availability."
    }, 
    "arbiter": {
      "type": "Optional[String[0]]", 
      "description": "Arbiter count for volume"
    }, 
    "redundancies": {
      "type": "Optional[String[0]]", 
      "description": "Redundancy count for volume"
    }, 
    "directory": {
      "type": "Optional[String[0]]", 
      "description": "Directory for limit-usage"
    }, 
    "start_on_create": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Controls whether the volume is started after creation or not, defaults to yes"
    }, 
    "rebalance": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Controls whether the cluster is rebalanced after changes"
    }, 
    "options": {
      "type": "Optional[String[0]]", 
      "description": "A dictionary/hash with options/settings for the volume"
    }, 
    "transport": {
      "type": "Optional[Enum[\"tcp\", \"rdma\", \"tcp,rdma\"]]", 
      "description": "Transport type for volume"
    }
  }
}