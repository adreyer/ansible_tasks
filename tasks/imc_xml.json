{
  "description": "Manage Cisco IMC hardware through its XML API", 
  "parameters": {
    "username": {
      "type": "Optional[String]", 
      "description": "Username used to login to the switch."
    }, 
    "protocol": {
      "type": "Optional[String]", 
      "description": "Connection protocol to use."
    }, 
    "hostname": {
      "type": "String", 
      "description": "IP Address or hostname of Cisco IMC, resolvable by Ansible control host."
    }, 
    "content": {
      "type": "Optional[String]", 
      "description": "When used instead of C(path), sets the content of the API requests directly. This may be convenient to template simple requests, for anything complex use the M(template) module. You can add multiple IMC XML documents and they will be processed sequentially, the Cisco IMC output is subsequently merged. Parameter C(path) is mutual exclusive with parameter C(content)."
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "The socket level timeout in seconds."
    }, 
    "path": {
      "type": "Optional[String]", 
      "description": "Name of the absolute path of the filename that includes the body of the http request being sent to the Cisco IMC XML API. Parameter C(path) is mutual exclusive with parameter C(content)."
    }, 
    "password": {
      "type": "Optional[String]", 
      "description": "The password to use for authentication."
    }, 
    "validate_certs": {
      "type": "Optional[Boolean]", 
      "description": "If C(no), SSL certificates will not be validated. This should only set to C(no) used on personally controlled sites using self-signed certificates."
    }
  }
}