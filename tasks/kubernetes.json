{
  "input_method": "stdin", 
  "description": "This module can manage Kubernetes resources on an existing cluster using the Kubernetes server API. Users can specify in-line API data, or specify an existing Kubernetes YAML file. Currently, this module, Only supports HTTP Basic Auth Only supports 'strategic merge' for update, http://goo.gl/fCPYxT SSL certs are not working, use 'validate_certs=off' to disable", 
  "parameters": {
    "url_password": {
      "type": "Optional[String[0]]", 
      "description": "The HTTP Basic Auth password for the API I(endpoint). This should be set unless using the C('insecure') option."
    }, 
    "certificate_authority_data": {
      "type": "Optional[String[0]]", 
      "description": "Certificate Authority data for Kubernetes server. Should be in either standard PEM format or base64 encoded PEM data. Note that certificate verification is broken until ansible supports a version of 'match_hostname' that can match the IP address against the CA data."
    }, 
    "inline_data": {
      "type": "String[0]", 
      "description": "The Kubernetes YAML data to send to the API I(endpoint). This option is mutually exclusive with C('file_reference')."
    }, 
    "insecure": {
      "type": "Optional[String[0]]", 
      "description": "Reverts the connection to using HTTP instead of HTTPS. This option should only be used when execuing the M('kubernetes') module local to the Kubernetes cluster using the insecure local port (locahost:8080 by default)."
    }, 
    "file_reference": {
      "type": "Optional[String[0]]", 
      "description": "Specify full path to a Kubernets YAML file to send to API I(endpoint). This option is mutually exclusive with C('inline_data')."
    }, 
    "api_endpoint": {
      "type": "String[0]", 
      "description": "The IPv4 API endpoint of the Kubernetes cluster."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\", \"update\", \"replace\"]]", 
      "description": "The desired action to take on the Kubernetes data."
    }, 
    "url_username": {
      "type": "Optional[String[0]]", 
      "description": "The HTTP Basic Auth username for the API I(endpoint). This should be set unless using the C('insecure') option."
    }, 
    "validate_certs": {
      "type": "Optional[String[0]]", 
      "description": "Enable/disable certificate validation. Note that this is set to C(false) until Ansible can support IP address based certificate hostname matching (exists in >= python3.5.0)."
    }
  }
}