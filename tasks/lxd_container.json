{
  "description": "Manage LXD Containers", 
  "parameters": {
    "name": {
      "type": "String", 
      "description": "Name of a container."
    }, 
    "wait_for_ipv4_addresses": {
      "type": "Optional[String]", 
      "description": "If this is true, the C(lxd_container) waits until IPv4 addresses are set to the all network interfaces in the container after starting or restarting."
    }, 
    "url": {
      "type": "Optional[String]", 
      "description": "The unix domain socket path or the https URL for the LXD server."
    }, 
    "trust_password": {
      "type": "Optional[String]", 
      "description": "The client trusted password. You need to set this password on the LXD server before running this module using the following command. lxc config set core.trust_password <some random password> See U(https://www.stgraber.org/2016/04/18/lxd-api-direct-interaction/) If trust_password is set, this module send a request for authentication before sending any requests."
    }, 
    "cert_file": {
      "type": "Optional[String]", 
      "description": "The client certificate file path."
    }, 
    "ephemeral": {
      "type": "Optional[String]", 
      "description": "Whether or not the container is ephemeral (e.g. true or false). See U(https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1)"
    }, 
    "devices": {
      "type": "Optional[String]", 
      "description": "The devices for the container (e.g. { \"rootfs\": { \"path\": \"/dev/kvm\", \"type\": \"unix-char\" }). See U(https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1)"
    }, 
    "source": {
      "type": "Optional[String]", 
      "description": "The source for the container (e.g. { \"type\": \"image\", \"mode\": \"pull\", \"server\": \"https://images.linuxcontainers.org\", \"protocol\": \"lxd\", \"alias\": \"ubuntu/xenial/amd64\" }). See U(https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1)"
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Define the state of a container."
    }, 
    "architecture": {
      "type": "Optional[String]", 
      "description": "The architecture for the container (e.g. \"x86_64\" or \"i686\"). See U(https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1)"
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "A timeout for changing the state of the container. This is also used as a timeout for waiting until IPv4 addresses are set to the all network interfaces in the container after starting or restarting."
    }, 
    "key_file": {
      "type": "Optional[String]", 
      "description": "The client certificate key file path."
    }, 
    "config": {
      "type": "Optional[String]", 
      "description": "The config for the container (e.g. {\"limits.cpu\": \"2\"}). See U(https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1) If the container already exists and its \"config\" value in metadata obtained from GET /1.0/containers/<name> U(https://github.com/lxc/lxd/blob/master/doc/rest-api.md#10containersname) are different, they this module tries to apply the configurations. The key starts with 'volatile.' are ignored for this comparison. Not all config values are supported to apply the existing container. Maybe you need to delete and recreate a container."
    }, 
    "force_stop": {
      "type": "Optional[String]", 
      "description": "If this is true, the C(lxd_container) forces to stop the container when it stops or restarts the container."
    }
  }
}