{
  "input_method": "stdin", 
  "description": "Adds or removes a user from a MySQL database.", 
  "parameters": {
    "login_port": {
      "type": "Optional[String[0]]", 
      "description": "Port of the MySQL server. Requires I(login_host) be defined as other then localhost if login_port is used."
    }, 
    "update_password": {
      "type": "Optional[Enum[\"always\", \"on_create\"]]", 
      "description": "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
    }, 
    "ssl_cert": {
      "type": "Optional[String[0]]", 
      "description": "The path to a client public key certificate."
    }, 
    "config_file": {
      "type": "Optional[String[0]]", 
      "description": "Specify a config file from which user and password are to be read."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "name of the user (role) to add or remove"
    }, 
    "ssl_key": {
      "type": "Optional[String[0]]", 
      "description": "The path to the client private key."
    }, 
    "login_user": {
      "type": "Optional[String[0]]", 
      "description": "The username used to authenticate with."
    }, 
    "login_host": {
      "type": "Optional[String[0]]", 
      "description": "Host running the database."
    }, 
    "append_privs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Append the privileges defined by priv to the existing ones for this user instead of overwriting existing ones."
    }, 
    "sql_log_bin": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Whether binary logging should be enabled or disabled for the connection."
    }, 
    "host_all": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "override the host option, making ansible apply changes to all hostnames for a given user.  This option cannot be used when creating users"
    }, 
    "ssl_ca": {
      "type": "Optional[String[0]]", 
      "description": "The path to a Certificate Authority (CA) certificate. This option, if used, must specify the same certificate as used by the server."
    }, 
    "login_password": {
      "type": "Optional[String[0]]", 
      "description": "The password used to authenticate with."
    }, 
    "login_unix_socket": {
      "type": "Optional[String[0]]", 
      "description": "The path to a Unix domain socket for local connections."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Whether the user should exist.  When C(absent), removes the user."
    }, 
    "encrypted": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Indicate that the 'password' field is a `mysql_native_password` hash"
    }, 
    "host": {
      "type": "Optional[String[0]]", 
      "description": "the 'host' part of the MySQL username"
    }, 
    "check_implicit_admin": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Check if mysql allows login as root/nopassword before trying supplied credentials."
    }, 
    "password": {
      "type": "Optional[String[0]]", 
      "description": "set the user's password."
    }, 
    "connect_timeout": {
      "type": "Optional[String[0]]", 
      "description": "The connection timeout when connecting to the MySQL server."
    }, 
    "priv": {
      "type": "Optional[String[0]]", 
      "description": "MySQL privileges string in the format: C(db.table:priv1,priv2)."
    }
  }
}