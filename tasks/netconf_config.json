{
  "input_method": "stdin", 
  "description": "Netconf is a network management protocol developed and standardized by the IETF. It is documented in RFC 6241.", 
  "parameters": {
    "username": {
      "type": "String[0]", 
      "description": "the username to authenticate with"
    }, 
    "xml": {
      "type": "Optional[String[0]]", 
      "description": "the XML content to send to the device"
    }, 
    "password": {
      "type": "String[0]", 
      "description": "password of the user to authenticate with"
    }, 
    "allow_agent": {
      "type": "Optional[String[0]]", 
      "description": "if true, enables querying SSH agent (if found) for keys"
    }, 
    "src": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the source path to the xml file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This argument is mutually exclusive with I(xml)."
    }, 
    "host": {
      "type": "String[0]", 
      "description": "the hostname or ip address of the netconf device"
    }, 
    "look_for_keys": {
      "type": "Optional[String[0]]", 
      "description": "if true, enables looking in the usual locations for ssh keys (e.g. ~/.ssh/id_*)"
    }, 
    "hostkey_verify": {
      "type": "Optional[String[0]]", 
      "description": "if true, the ssh host key of the device must match a ssh key present on the host"
    }, 
    "datastore": {
      "type": "Optional[String[0]]", 
      "description": "auto, uses candidate and fallback to running"
    }, 
    "save": {
      "type": "Optional[String[0]]", 
      "description": "The C(save) argument instructs the module to save the running- config to the startup-config if changed."
    }, 
    "port": {
      "type": "Optional[String[0]]", 
      "description": "the netconf port"
    }
  }
}