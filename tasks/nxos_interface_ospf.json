{
  "input_method": "stdin", 
  "description": "Manages configuration of an OSPF interface instance.", 
  "parameters": {
    "ospf": {
      "type": "String[0]", 
      "description": "Name of the ospf instance."
    }, 
    "message_digest_encryption_type": {
      "type": "Optional[Enum[\"cisco_type_7\", \"3des\"]]", 
      "description": "Specifies the scheme used for encrypting message_digest_password. Valid values are '3des' or 'cisco_type_7' encryption."
    }, 
    "cost": {
      "type": "Optional[String[0]]", 
      "description": "The cost associated with this cisco_interface_ospf instance."
    }, 
    "hello_interval": {
      "type": "Optional[String[0]]", 
      "description": "Time between sending successive hello packets. Valid values are an integer or the keyword 'default'."
    }, 
    "use_ssl": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
    }, 
    "port": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
    }, 
    "transport": {
      "type": "Optional[String[0]]", 
      "description": "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
    }, 
    "area": {
      "type": "String[0]", 
      "description": "Ospf area associated with this cisco_interface_ospf instance. Valid values are a string, formatted as an IP address (i.e. \"0.0.0.0\") or as an integer."
    }, 
    "message_digest_algorithm_type": {
      "type": "Optional[Enum[\"md5\"]]", 
      "description": "Algorithm used for authentication among neighboring routers within an area. Valid values is 'md5'."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Determines whether the config should be present or not on the device."
    }, 
    "passive_interface": {
      "type": "Optional[Enum[\"true\", \"false\"]]", 
      "description": "Setting to true will prevent this interface from receiving HELLO packets. Valid values are 'true' and 'false'."
    }, 
    "provider": {
      "type": "Optional[String[0]]", 
      "description": "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
    }, 
    "message_digest": {
      "type": "Optional[Enum[\"true\", \"false\"]]", 
      "description": "Enables or disables the usage of message digest authentication. Valid values are 'true' and 'false'."
    }, 
    "username": {
      "type": "Optional[String[0]]", 
      "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
    }, 
    "message_digest_password": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the message_digest password. Valid value is a string."
    }, 
    "host": {
      "type": "String[0]", 
      "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
    }, 
    "interface": {
      "type": "String[0]", 
      "description": "Name of this cisco_interface resource. Valid value is a string."
    }, 
    "password": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
    }, 
    "ssh_keyfile": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
    }, 
    "message_digest_key_id": {
      "type": "Optional[String[0]]", 
      "description": "Md5 authentication key-id associated with the ospf instance. If this is present, message_digest_encryption_type, message_digest_algorithm_type and message_digest_password are mandatory. Valid value is an integer and 'default'."
    }, 
    "dead_interval": {
      "type": "Optional[String[0]]", 
      "description": "Time interval an ospf neighbor waits for a hello packet before tearing down adjacencies. Valid values are an integer or the keyword 'default'."
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
    }, 
    "validate_certs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
    }
  }
}