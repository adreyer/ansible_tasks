{
  "input_method": "stdin", 
  "description": "Collects facts from devices running the OpenSwitch operating system.  Fact collection is supported over both Cli and Rest transports.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.", 
  "parameters": {
    "username": {
      "type": "Optional[String[0]]", 
      "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
    }, 
    "password": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
    }, 
    "ssh_keyfile": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
    }, 
    "host": {
      "type": "String[0]", 
      "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
    }, 
    "gather_subset": {
      "type": "Optional[String[0]]", 
      "description": "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, hardware, config, legacy, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected."
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
    }, 
    "provider": {
      "type": "Optional[String[0]]", 
      "description": "Convenience method that allows all I(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
    }, 
    "use_ssl": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not I(rest), this value is ignored."
    }, 
    "endpoints": {
      "type": "Optional[String[0]]", 
      "description": "Accepts a list of endpoints to retrieve from the remote device using the REST API.  The endpoints should be valid endpoints available on the device.  This argument is only valid when the C(transport=rest)."
    }, 
    "config": {
      "type": "Optional[Enum[\"True\", \"False\"]]", 
      "description": "When enabled, this argument will collect the current running configuration from the remote device.  If the C(transport=rest) then the collected configuration will be the full system configuration."
    }, 
    "port": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(rest).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
    }, 
    "transport": {
      "type": "Optional[Enum[\"ssh\", \"cli\", \"rest\"]]", 
      "description": "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
    }
  }
}