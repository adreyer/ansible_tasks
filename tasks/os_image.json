{
  "input_method": "stdin", 
  "description": "Add or Remove images from the OpenStack Image Repository", 
  "parameters": {
    "auth_type": {
      "type": "Optional[String[0]]", 
      "description": "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
    }, 
    "kernel": {
      "type": "Optional[String[0]]", 
      "description": "The name of an existing kernel image that will be associated with this image"
    }, 
    "availability_zone": {
      "type": "Optional[String[0]]", 
      "description": "Ignored. Present for backwards compatability"
    }, 
    "container_format": {
      "type": "Optional[String[0]]", 
      "description": "The format of the container"
    }, 
    "min_ram": {
      "type": "Optional[String[0]]", 
      "description": "The minimum ram (in MB) required to boot this image"
    }, 
    "cacert": {
      "type": "Optional[String[0]]", 
      "description": "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
    }, 
    "owner": {
      "type": "Optional[String[0]]", 
      "description": "The owner of the image"
    }, 
    "cloud": {
      "type": "Optional[String[0]]", 
      "description": "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
    }, 
    "disk_format": {
      "type": "Optional[String[0]]", 
      "description": "The format of the disk that is getting uploaded"
    }, 
    "filename": {
      "type": "Optional[String[0]]", 
      "description": "The path to the file which has to be uploaded"
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Should the resource be present or absent."
    }, 
    "ramdisk": {
      "type": "Optional[String[0]]", 
      "description": "The name of an existing ramdisk image that will be associated with this image"
    }, 
    "region_name": {
      "type": "Optional[String[0]]", 
      "description": "Name of the region."
    }, 
    "api_timeout": {
      "type": "Optional[String[0]]", 
      "description": "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
    }, 
    "auth": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
    }, 
    "endpoint_type": {
      "type": "Optional[Enum[\"public\", \"internal\", \"admin\"]]", 
      "description": "Endpoint URL type to fetch from the service catalog."
    }, 
    "key": {
      "type": "Optional[String[0]]", 
      "description": "A path to a client key to use as part of the SSL transaction."
    }, 
    "min_disk": {
      "type": "Optional[String[0]]", 
      "description": "The minimum disk space (in GB) required to boot this image"
    }, 
    "is_public": {
      "type": "Optional[String[0]]", 
      "description": "Whether the image can be accessed publicly. Note that publicizing an image requires admin role by default."
    }, 
    "properties": {
      "type": "Optional[String[0]]", 
      "description": "Additional properties to be associated with this image"
    }, 
    "wait": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Should ansible wait until the requested resource is complete."
    }, 
    "name": {
      "type": "Optional[String[0]]", 
      "description": "Name that has to be given to the image"
    }, 
    "cert": {
      "type": "Optional[String[0]]", 
      "description": "A path to a client certificate to use as part of the SSL transaction."
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "How long should ansible wait for the requested resource."
    }, 
    "validate_certs": {
      "type": "Optional[String[0]]", 
      "description": "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
    }
  }
}