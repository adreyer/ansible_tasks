{
  "description": "Create/Delete Bare Metal Resources from OpenStack", 
  "parameters": {
    "auth_type": {
      "type": "Optional[String]", 
      "description": "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
    }, 
    "availability_zone": {
      "type": "Optional[String]", 
      "description": "Ignored. Present for backwards compatibility"
    }, 
    "cloud": {
      "type": "Optional[String]", 
      "description": "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
    }, 
    "uuid": {
      "type": "Optional[String]", 
      "description": "globally unique identifier (UUID) to be given to the resource. Will be auto-generated if not specified, and name is specified. Definition of a UUID will always take precedence to a name value."
    }, 
    "nics": {
      "type": "String", 
      "description": "A list of network interface cards, eg, \" - mac: aa:bb:cc:aa:bb:cc\""
    }, 
    "ironic_url": {
      "type": "Optional[String]", 
      "description": "If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API.  Use with \"auth\" and \"auth_type\" settings set to None."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Indicates desired state of the resource"
    }, 
    "chassis_uuid": {
      "type": "Optional[String]", 
      "description": "Associate the node with a pre-defined chassis."
    }, 
    "skip_update_of_driver_password": {
      "type": "Optional[String]", 
      "description": "Allows the code that would assert changes to nodes to skip the update if the change is a single line consisting of the password field.  As of Kilo, by default, passwords are always masked to API requests, which means the logic as a result always attempts to re-assert the password field."
    }, 
    "region_name": {
      "type": "Optional[String]", 
      "description": "Name of the region."
    }, 
    "api_timeout": {
      "type": "Optional[String]", 
      "description": "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
    }, 
    "driver": {
      "type": "String", 
      "description": "The name of the Ironic Driver to use with this node."
    }, 
    "auth": {
      "type": "Optional[String]", 
      "description": "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
    }, 
    "endpoint_type": {
      "type": "Optional[String]", 
      "description": "Endpoint URL type to fetch from the service catalog."
    }, 
    "key": {
      "type": "Optional[String]", 
      "description": "A path to a client key to use as part of the SSL transaction."
    }, 
    "cacert": {
      "type": "Optional[String]", 
      "description": "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
    }, 
    "properties": {
      "type": "Optional[String]", 
      "description": "Definition of the physical characteristics of this server, used for scheduling purposes"
    }, 
    "wait": {
      "type": "Optional[String]", 
      "description": "Should ansible wait until the requested resource is complete."
    }, 
    "name": {
      "type": "Optional[String]", 
      "description": "unique name identifier to be given to the resource."
    }, 
    "driver_info": {
      "type": "Optional[String]", 
      "description": "Information for this server's driver. Will vary based on which driver is in use. Any sub-field which is populated will be validated during creation."
    }, 
    "cert": {
      "type": "Optional[String]", 
      "description": "A path to a client certificate to use as part of the SSL transaction."
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "How long should ansible wait for the requested resource."
    }, 
    "validate_certs": {
      "type": "Optional[String]", 
      "description": "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
    }
  }
}