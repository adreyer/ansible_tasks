{
  "description": "Add/Update/Delete ports from an OpenStack cloud.", 
  "parameters": {
    "auth_type": {
      "type": "Optional[String]", 
      "description": "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
    }, 
    "allowed_address_pairs": {
      "type": "Optional[String]", 
      "description": "Allowed address pairs list.  Allowed address pairs are supported with dictionary structure. e.g.  allowed_address_pairs: - ip_address: 10.1.0.12 mac_address: ab:cd:ef:12:34:56 - ip_address: ..."
    }, 
    "availability_zone": {
      "type": "Optional[String]", 
      "description": "Ignored. Present for backwards compatibility"
    }, 
    "extra_dhcp_opts": {
      "type": "Optional[String]", 
      "description": "Extra dhcp options to be assigned to this port.  Extra options are supported with dictionary structure. e.g.  extra_dhcp_opts: - opt_name: opt name1 opt_value: value1 - opt_name: ..."
    }, 
    "device_owner": {
      "type": "Optional[String]", 
      "description": "The ID of the entity that uses this port."
    }, 
    "fixed_ips": {
      "type": "Optional[String]", 
      "description": "Desired IP and/or subnet for this port.  Subnet is referenced by subnet_id and IP is referenced by ip_address."
    }, 
    "security_groups": {
      "type": "Optional[String]", 
      "description": "Security group(s) ID(s) or name(s) associated with the port (comma separated string or YAML list)"
    }, 
    "network": {
      "type": "String", 
      "description": "Network ID or name this port belongs to."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Should the resource be present or absent."
    }, 
    "cloud": {
      "type": "Optional[String]", 
      "description": "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
    }, 
    "mac_address": {
      "type": "Optional[String]", 
      "description": "MAC address of this port."
    }, 
    "device_id": {
      "type": "Optional[String]", 
      "description": "Device ID of device using this port."
    }, 
    "region_name": {
      "type": "Optional[String]", 
      "description": "Name of the region."
    }, 
    "api_timeout": {
      "type": "Optional[String]", 
      "description": "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
    }, 
    "auth": {
      "type": "Optional[String]", 
      "description": "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
    }, 
    "endpoint_type": {
      "type": "Optional[String]", 
      "description": "Endpoint URL type to fetch from the service catalog."
    }, 
    "key": {
      "type": "Optional[String]", 
      "description": "A path to a client key to use as part of the SSL transaction."
    }, 
    "cacert": {
      "type": "Optional[String]", 
      "description": "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
    }, 
    "wait": {
      "type": "Optional[String]", 
      "description": "Should ansible wait until the requested resource is complete."
    }, 
    "name": {
      "type": "Optional[String]", 
      "description": "Name that has to be given to the port."
    }, 
    "admin_state_up": {
      "type": "Optional[String]", 
      "description": "Sets admin state."
    }, 
    "cert": {
      "type": "Optional[String]", 
      "description": "A path to a client certificate to use as part of the SSL transaction."
    }, 
    "no_security_groups": {
      "type": "Optional[String]", 
      "description": "Do not associate a security group with this port."
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "How long should ansible wait for the requested resource."
    }, 
    "validate_certs": {
      "type": "Optional[String]", 
      "description": "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
    }
  }
}