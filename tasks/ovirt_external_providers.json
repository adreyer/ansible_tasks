{
  "description": "Module to manage external providers in oVirt/RHV", 
  "parameters": {
    "username": {
      "type": "Optional[String]", 
      "description": "Username to be used for login to external provider. Applicable for all types."
    }, 
    "read_only": {
      "type": "Optional[String]", 
      "description": "Specify if the network should be read only. Applicable if C(type) is I(network)."
    }, 
    "description": {
      "type": "Optional[String]", 
      "description": "Description of the external provider."
    }, 
    "url": {
      "type": "Optional[String]", 
      "description": "URL where external provider is hosted. Applicable for those types: I(os_image), I(os_volume), I(network) and I(foreman)."
    }, 
    "tenant_name": {
      "type": "Optional[String]", 
      "description": "Name of the tenant. Applicable for those types: I(os_image), I(os_volume) and I(network)."
    }, 
    "poll_interval": {
      "type": "Optional[String]", 
      "description": "Number of the seconds the module waits until another poll request on entity status is sent."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Should the external be present or absent"
    }, 
    "auth": {
      "type": "String", 
      "description": "Dictionary with values needed to create HTTP/HTTPS connection to oVirt: C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable. C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable. C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable. C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable. C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked. C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable. C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
    }, 
    "name": {
      "type": "Optional[String]", 
      "description": "Name of the external provider to manage."
    }, 
    "fetch_nested": {
      "type": "Optional[String]", 
      "description": "If I(True) the module will fetch additional data from the API. It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
    }, 
    "authentication_url": {
      "type": "Optional[String]", 
      "description": "Keystone authentication URL of the openstack provider. Applicable for those types: I(os_image), I(os_volume) and I(network)."
    }, 
    "nested_attributes": {
      "type": "Optional[String]", 
      "description": "Specifies list of the attributes which should be fetched from the API. This parameter apply only when C(fetch_nested) is I(true)."
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "The amount of time in seconds the module should wait for the instance to get into desired state."
    }, 
    "data_center": {
      "type": "Optional[String]", 
      "description": "Name of the data center where provider should be attached. Applicable for those type: I(os_volume)."
    }, 
    "password": {
      "type": "Optional[String]", 
      "description": "Password of the user specified in C(username) parameter. Applicable for all types."
    }, 
    "type": {
      "type": "Optional[String]", 
      "description": "Type of the external provider."
    }, 
    "network_type": {
      "type": "Optional[String]", 
      "description": "Type of the external network provider either external (for example OVN) or neutron. Applicable if C(type) is I(network)."
    }, 
    "wait": {
      "type": "Optional[String]", 
      "description": "I(True) if the module should wait for the entity to get into desired state."
    }
  }
}