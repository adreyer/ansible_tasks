{
  "input_method": "stdin", 
  "description": "Module to manage datacenter quotas in oVirt/RHV", 
  "parameters": {
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "The amount of time in seconds the module should wait for the instance to get into desired state."
    }, 
    "description": {
      "type": "Optional[String[0]]", 
      "description": "Description of the quota to manage."
    }, 
    "cluster_grace": {
      "type": "Optional[String[0]]", 
      "description": "Cluster grace(hard limit) defined in percentage (1-100)."
    }, 
    "cluster_threshold": {
      "type": "Optional[String[0]]", 
      "description": "Cluster threshold(soft limit) defined in percentage (0-100)."
    }, 
    "poll_interval": {
      "type": "Optional[String[0]]", 
      "description": "Number of the seconds the module waits until another poll request on entity status is sent."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Should the quota be present/absent."
    }, 
    "auth": {
      "type": "String[0]", 
      "description": "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
    }, 
    "name": {
      "type": "String[0]", 
      "description": "Name of the quota to manage."
    }, 
    "fetch_nested": {
      "type": "Optional[String[0]]", 
      "description": "If I(True) the module will fetch additional data from the API."
    }, 
    "storage_grace": {
      "type": "Optional[String[0]]", 
      "description": "Storage grace(hard limit) defined in percentage (1-100)."
    }, 
    "nested_attributes": {
      "type": "Optional[String[0]]", 
      "description": "Specifies list of the attributes which should be fetched from the API."
    }, 
    "storage_threshold": {
      "type": "Optional[String[0]]", 
      "description": "Storage threshold(soft limit) defined in percentage (0-100)."
    }, 
    "data_center": {
      "type": "String[0]", 
      "description": "Name of the datacenter where quota should be managed."
    }, 
    "clusters": {
      "type": "Optional[String[0]]", 
      "description": "List of dictionary of cluster limits, which is valid to specific cluster."
    }, 
    "storages": {
      "type": "Optional[String[0]]", 
      "description": "List of dictionary of storage limits, which is valid to specific storage."
    }, 
    "wait": {
      "type": "Optional[String[0]]", 
      "description": "I(True) if the module should wait for the entity to get into desired state."
    }
  }
}