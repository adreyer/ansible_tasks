{
  "description": "Module to manage datacenter quotas in oVirt/RHV", 
  "parameters": {
    "timeout": {
      "type": "Optional[String]", 
      "description": "The amount of time in seconds the module should wait for the instance to get into desired state."
    }, 
    "description": {
      "type": "Optional[String]", 
      "description": "Description of the quota to manage."
    }, 
    "cluster_grace": {
      "type": "Optional[String]", 
      "description": "Cluster grace(hard limit) defined in percentage (1-100)."
    }, 
    "cluster_threshold": {
      "type": "Optional[String]", 
      "description": "Cluster threshold(soft limit) defined in percentage (0-100)."
    }, 
    "poll_interval": {
      "type": "Optional[String]", 
      "description": "Number of the seconds the module waits until another poll request on entity status is sent."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Should the quota be present/absent."
    }, 
    "auth": {
      "type": "String", 
      "description": "Dictionary with values needed to create HTTP/HTTPS connection to oVirt: C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable. C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable. C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable. C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable. C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked. C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable. C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
    }, 
    "name": {
      "type": "String", 
      "description": "Name of the quota to manage."
    }, 
    "fetch_nested": {
      "type": "Optional[String]", 
      "description": "If I(True) the module will fetch additional data from the API. It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
    }, 
    "storage_grace": {
      "type": "Optional[String]", 
      "description": "Storage grace(hard limit) defined in percentage (1-100)."
    }, 
    "nested_attributes": {
      "type": "Optional[String]", 
      "description": "Specifies list of the attributes which should be fetched from the API. This parameter apply only when C(fetch_nested) is I(true)."
    }, 
    "storage_threshold": {
      "type": "Optional[String]", 
      "description": "Storage threshold(soft limit) defined in percentage (0-100)."
    }, 
    "data_center": {
      "type": "String", 
      "description": "Name of the datacenter where quota should be managed."
    }, 
    "clusters": {
      "type": "Optional[String]", 
      "description": "List of dictionary of cluster limits, which is valid to specific cluster. If cluster isn't spefied it's valid to all clusters in system: C(cluster) - Name of the cluster. C(memory) - Memory limit (in GiB). C(cpu) - CPU limit."
    }, 
    "storages": {
      "type": "Optional[String]", 
      "description": "List of dictionary of storage limits, which is valid to specific storage. If storage isn't spefied it's valid to all storages in system: C(storage) - Name of the storage. C(size) - Size limit (in GiB)."
    }, 
    "wait": {
      "type": "Optional[String]", 
      "description": "I(True) if the module should wait for the entity to get into desired state."
    }
  }
}