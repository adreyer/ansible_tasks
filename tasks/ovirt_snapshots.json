{
  "input_method": "stdin", 
  "description": "Module to manage Virtual Machine Snapshots in oVirt/RHV", 
  "parameters": {
    "vm_name": {
      "type": "String[0]", 
      "description": "Name of the Virtual Machine to manage."
    }, 
    "description": {
      "type": "Optional[String[0]]", 
      "description": "Description of the snapshot."
    }, 
    "use_memory": {
      "type": "Optional[String[0]]", 
      "description": "If I(true) and C(state) is I(present) save memory of the Virtual Machine if it's running."
    }, 
    "poll_interval": {
      "type": "Optional[String[0]]", 
      "description": "Number of the seconds the module waits until another poll request on entity status is sent."
    }, 
    "fetch_nested": {
      "type": "Optional[String[0]]", 
      "description": "If I(True) the module will fetch additional data from the API."
    }, 
    "nested_attributes": {
      "type": "Optional[String[0]]", 
      "description": "Specifies list of the attributes which should be fetched from the API."
    }, 
    "state": {
      "type": "Optional[Enum[\"restore\", \"present\", \"absent\"]]", 
      "description": "Should the Virtual Machine snapshot be restore/present/absent."
    }, 
    "auth": {
      "type": "String[0]", 
      "description": "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "The amount of time in seconds the module should wait for the instance to get into desired state."
    }, 
    "snapshot_id": {
      "type": "Optional[String[0]]", 
      "description": "ID of the snapshot to manage."
    }, 
    "wait": {
      "type": "Optional[String[0]]", 
      "description": "I(True) if the module should wait for the entity to get into desired state."
    }
  }
}