{
  "input_method": "stdin", 
  "description": "Module to manage storage domains in oVirt/RHV", 
  "parameters": {
    "comment": {
      "type": "Optional[String[0]]", 
      "description": "Comment of the storage domain."
    }, 
    "fcp": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary with values for fibre channel storage type:"
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "The amount of time in seconds the module should wait for the instance to get into desired state."
    }, 
    "description": {
      "type": "Optional[String[0]]", 
      "description": "Description of the storage domain."
    }, 
    "format": {
      "type": "Optional[String[0]]", 
      "description": "If I(True) storage domain will be formatted after removing it from oVirt/RHV."
    }, 
    "iscsi": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary with values for iSCSI storage type:"
    }, 
    "posixfs": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary with values for PosixFS storage type:"
    }, 
    "poll_interval": {
      "type": "Optional[String[0]]", 
      "description": "Number of the seconds the module waits until another poll request on entity status is sent."
    }, 
    "glusterfs": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary with values for GlusterFS storage type:"
    }, 
    "nested_attributes": {
      "type": "Optional[String[0]]", 
      "description": "Specifies list of the attributes which should be fetched from the API."
    }, 
    "name": {
      "type": "Optional[String[0]]", 
      "description": "Name of the storage domain to manage."
    }, 
    "fetch_nested": {
      "type": "Optional[String[0]]", 
      "description": "If I(True) the module will fetch additional data from the API."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\", \"maintenance\", \"unattached\"]]", 
      "description": "Should the storage domain be present/absent/maintenance/unattached"
    }, 
    "nfs": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary with values for NFS storage type:"
    }, 
    "auth": {
      "type": "String[0]", 
      "description": "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
    }, 
    "domain_function": {
      "type": "Optional[Enum[\"data\", \"iso\", \"export\"]]", 
      "description": "Function of the storage domain."
    }, 
    "data_center": {
      "type": "Optional[String[0]]", 
      "description": "Data center name where storage domain should be attached."
    }, 
    "host": {
      "type": "Optional[String[0]]", 
      "description": "Host to be used to mount storage."
    }, 
    "destroy": {
      "type": "Optional[String[0]]", 
      "description": "Logical remove of the storage domain. If I(true) retains the storage domain's data for import."
    }, 
    "wait": {
      "type": "Optional[String[0]]", 
      "description": "I(True) if the module should wait for the entity to get into desired state."
    }
  }
}