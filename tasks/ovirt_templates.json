{
  "description": "Module to manage virtual machine templates in oVirt/RHV", 
  "parameters": {
    "clone_permissions": {
      "type": "Optional[String]", 
      "description": "If I(True) then the permissions of the VM (only the direct ones, not the inherited ones) will be copied to the created template. This parameter is used only when C(state) I(present)."
    }, 
    "exclusive": {
      "type": "Optional[String]", 
      "description": "When C(state) is I(exported) this parameter indicates if the existing templates with the same name should be overwritten."
    }, 
    "cpu_profile": {
      "type": "Optional[String]", 
      "description": "CPU profile to be set to template."
    }, 
    "storage_domain": {
      "type": "Optional[String]", 
      "description": "When C(state) is I(imported) this parameter specifies the name of the destination data storage domain. When C(state) is R(registered) this parameter specifies the name of the data storage domain of the unregistered template."
    }, 
    "description": {
      "type": "Optional[String]", 
      "description": "Description of the template."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Should the template be present/absent/exported/imported/registered. When C(state) is R(registered) and the unregistered template's name belongs to an already registered in engine template then we fail to register the unregistered template."
    }, 
    "export_domain": {
      "type": "Optional[String]", 
      "description": "When C(state) is I(exported) or I(imported) this parameter specifies the name of the export storage domain."
    }, 
    "image_disk": {
      "type": "Optional[String]", 
      "description": "When C(state) is I(imported) and C(image_provider) is used this parameter specifies the name of disk to be imported as template."
    }, 
    "poll_interval": {
      "type": "Optional[String]", 
      "description": "Number of the seconds the module waits until another poll request on entity status is sent."
    }, 
    "vm": {
      "type": "Optional[String]", 
      "description": "Name of the VM, which will be used to create template."
    }, 
    "nested_attributes": {
      "type": "Optional[String]", 
      "description": "Specifies list of the attributes which should be fetched from the API. This parameter apply only when C(fetch_nested) is I(true)."
    }, 
    "name": {
      "type": "String", 
      "description": "Name of the template to manage."
    }, 
    "cluster": {
      "type": "Optional[String]", 
      "description": "Name of the cluster, where template should be created/imported."
    }, 
    "fetch_nested": {
      "type": "Optional[String]", 
      "description": "If I(True) the module will fetch additional data from the API. It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
    }, 
    "auth": {
      "type": "String", 
      "description": "Dictionary with values needed to create HTTP/HTTPS connection to oVirt: C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable. C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable. C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable. C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable. C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked. C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable. C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "The amount of time in seconds the module should wait for the instance to get into desired state."
    }, 
    "image_provider": {
      "type": "Optional[String]", 
      "description": "When C(state) is I(imported) this parameter specifies the name of the image provider to be used."
    }, 
    "wait": {
      "type": "Optional[String]", 
      "description": "I(True) if the module should wait for the entity to get into desired state."
    }
  }
}