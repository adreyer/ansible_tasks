{
  "description": "Management of Qemu(KVM) Virtual Machines in Proxmox VE cluster.", 
  "parameters": {
    "storage": {
      "type": "Optional[String]", 
      "description": "Target storage for full clone."
    }, 
    "force": {
      "type": "Optional[String]", 
      "description": "Allow to force stop VM. Can be used only with states C(stopped), C(restarted)."
    }, 
    "revert": {
      "type": "Optional[String]", 
      "description": "Revert a pending change."
    }, 
    "numa": {
      "type": "Optional[String]", 
      "description": "A hash/dictionaries of NUMA topology. C(numa='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - C(numa[n]) where 0 \u2264 n \u2264 N. Values allowed are - C(\"cpu=\"<id[-id];...>\",hostnodes=\"<id[-id];...>\",memory=\"number\",policy=\"(bind|interleave|preferred)\"\"). C(cpus) CPUs accessing this NUMA node. C(hostnodes) Host NUMA nodes to use. C(memory) Amount of memory this NUMA node provides. C(policy) NUMA allocation policy."
    }, 
    "scsihw": {
      "type": "Optional[String]", 
      "description": "Specifies the SCSI controller model."
    }, 
    "startup": {
      "type": "Optional[String]", 
      "description": "Startup and shutdown behavior. C([[order=]\\d+] [,up=\\d+] [,down=\\d+]). Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering."
    }, 
    "migrate_speed": {
      "type": "Optional[String]", 
      "description": "Sets maximum speed (in MB/s) for migrations. A value of 0 is no limit."
    }, 
    "freeze": {
      "type": "Optional[String]", 
      "description": "Specify if PVE should freeze CPU at startup (use 'c' monitor command to start execution)."
    }, 
    "full": {
      "type": "Optional[String]", 
      "description": "Create a full copy of all disk. This is always done when you clone a normal VM. For VM templates, we try to create a linked clone by default. Used only with clone"
    }, 
    "keyboard": {
      "type": "Optional[String]", 
      "description": "Sets the keyboard layout for VNC server."
    }, 
    "watchdog": {
      "type": "Optional[String]", 
      "description": "Creates a virtual hardware watchdog device."
    }, 
    "serial": {
      "type": "Optional[String]", 
      "description": "A hash/dictionary of serial device to create inside the VM. C('{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - serial[n](str; required) where 0 \u2264 n \u2264 3. Values allowed are - C((/dev/.+|socket)). /!\\ If you pass through a host serial device, it is no longer possible to migrate such machines - use with special care."
    }, 
    "sockets": {
      "type": "Optional[String]", 
      "description": "Sets the number of CPU sockets. (1 - N)."
    }, 
    "digest": {
      "type": "Optional[String]", 
      "description": "Specify if to prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications."
    }, 
    "description": {
      "type": "Optional[String]", 
      "description": "Specify the description for the VM. Only used on the configuration web interface. This is saved as comment inside the configuration file."
    }, 
    "startdate": {
      "type": "Optional[String]", 
      "description": "Sets the initial date of the real time clock. Valid format for date are C('now') or C('2016-09-25T16:01:21') or C('2016-09-25')."
    }, 
    "tablet": {
      "type": "Optional[String]", 
      "description": "Enables/disables the USB tablet device."
    }, 
    "bios": {
      "type": "Optional[String]", 
      "description": "Specify the BIOS implementation."
    }, 
    "cpu": {
      "type": "Optional[String]", 
      "description": "Specify emulated CPU type."
    }, 
    "balloon": {
      "type": "Optional[String]", 
      "description": "Specify the amount of RAM for the VM in MB. Using zero disables the balloon driver."
    }, 
    "cpuunits": {
      "type": "Optional[String]", 
      "description": "Specify CPU weight for a VM. You can disable fair-scheduler configuration by setting this to 0"
    }, 
    "boot": {
      "type": "Optional[String]", 
      "description": "Specify the boot order -> boot on floppy C(a), hard disk C(c), CD-ROM C(d), or network C(n). You can combine to set order."
    }, 
    "vga": {
      "type": "Optional[String]", 
      "description": "Select VGA type. If you want to use high resolution modes (>= 1280x1024x16) then you should use option 'std' or 'vmware'."
    }, 
    "shares": {
      "type": "Optional[String]", 
      "description": "Rets amount of memory shares for auto-ballooning. (0 - 50000). The larger the number is, the more memory this VM gets. The number is relative to weights of all other running VMs. Using 0 disables auto-ballooning, this means no limit."
    }, 
    "machine": {
      "type": "Optional[String]", 
      "description": "Specifies the Qemu machine type. type => C((pc|pc(-i440fx)?-\\d+\\.\\d+(\\.pxe)?|q35|pc-q35-\\d+\\.\\d+(\\.pxe)?))"
    }, 
    "hostpci": {
      "type": "Optional[String]", 
      "description": "Specify a hash/dictionary of map host pci devices into guest. C(hostpci='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - C(hostpci[n]) where 0 \u2264 n \u2264 N. Values allowed are -  C(\"host=\"HOSTPCIID[;HOSTPCIID2...]\",pcie=\"1|0\",rombar=\"1|0\",x-vga=\"1|0\"\"). The C(host) parameter is Host PCI device pass through. HOSTPCIID syntax is C(bus:dev.func) (hexadecimal numbers). C(pcie=boolean) I(default=0) Choose the PCI-express bus (needs the q35 machine model). C(rombar=boolean) I(default=1) Specify whether or not the device\u2019s ROM will be visible in the guest\u2019s memory map. C(x-vga=boolean) I(default=0) Enable vfio-vga device support. /!\\ This option allows direct access to host hardware. So it is no longer possible to migrate such machines - use with special care."
    }, 
    "state": {
      "type": "Optional[String]", 
      "description": "Indicates desired state of the instance. If C(current), the current state of the VM will be fecthed. You can access it with C(results.status)"
    }, 
    "autostart": {
      "type": "Optional[String]", 
      "description": "Specify, if the VM should be automatically restarted after crash (currently ignored in PVE API)."
    }, 
    "memory": {
      "type": "Optional[String]", 
      "description": "Memory size in MB for instance."
    }, 
    "net": {
      "type": "Optional[String]", 
      "description": "A hash/dictionary of network interfaces for the VM. C(net='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - C(net[n]) where 0 \u2264 n \u2264 N. Values allowed are - C(\"model=\"XX:XX:XX:XX:XX:XX\",brigde=\"value\",rate=\"value\",tag=\"value\",firewall=\"1|0\",trunks=\"vlanid\"\"). Model is one of C(e1000 e1000-82540em e1000-82544gc e1000-82545em i82551 i82557b i82559er ne2k_isa ne2k_pci pcnet rtl8139 virtio vmxnet3). C(XX:XX:XX:XX:XX:XX) should be an unique MAC address. This is automatically generated if not specified. The C(bridge) parameter can be used to automatically add the interface to a bridge device. The Proxmox VE standard bridge is called 'vmbr0'. Option C(rate) is used to limit traffic bandwidth from and to this interface. It is specified as floating point number, unit is 'Megabytes per second'. If you specify no bridge, we create a kvm 'user' (NATed) network device, which provides DHCP and DNS services."
    }, 
    "api_host": {
      "type": "String", 
      "description": "Specify the target host of the Proxmox VE cluster."
    }, 
    "migrate_downtime": {
      "type": "Optional[String]", 
      "description": "Sets maximum tolerated downtime (in seconds) for migrations."
    }, 
    "localtime": {
      "type": "Optional[String]", 
      "description": "Sets the real time clock to local time. This is enabled by default if ostype indicates a Microsoft OS."
    }, 
    "node": {
      "type": "Optional[String]", 
      "description": "Proxmox VE node, where the new VM will be created. Only required for C(state=present). For other states, it will be autodiscovered."
    }, 
    "agent": {
      "type": "Optional[String]", 
      "description": "Specify if the QEMU GuestAgent should be enabled/disabled."
    }, 
    "virtio": {
      "type": "Optional[String]", 
      "description": "A hash/dictionary of volume used as VIRTIO hard disk. C(virtio='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - C(virto[n]) where 0 \u2264 n \u2264 15. Values allowed are -  C(\"storage:size,format=value\"). C(storage) is the storage identifier where to create the disk. C(size) is the size of the disk in GB. C(format) is the drive\u2019s backing file\u2019s data format. C(qcow2|raw|subvol)."
    }, 
    "template": {
      "type": "Optional[String]", 
      "description": "Enables/disables the template."
    }, 
    "format": {
      "type": "Optional[String]", 
      "description": "Target drive\u2019s backing file\u2019s data format. Used only with clone"
    }, 
    "clone": {
      "type": "Optional[String]", 
      "description": "Name of VM to be cloned. If C(vmid) is setted, C(clone) can take arbitrary value but required for intiating the clone."
    }, 
    "args": {
      "type": "Optional[String]", 
      "description": "Pass arbitrary arguments to kvm. This option is for experts only!"
    }, 
    "api_password": {
      "type": "Optional[String]", 
      "description": "Specify the password to authenticate with. You can use C(PROXMOX_PASSWORD) environment variable."
    }, 
    "snapname": {
      "type": "Optional[String]", 
      "description": "The name of the snapshot. Used only with clone."
    }, 
    "tdf": {
      "type": "Optional[String]", 
      "description": "Enables/disables time drift fix."
    }, 
    "kvm": {
      "type": "Optional[String]", 
      "description": "Enable/disable KVM hardware virtualization."
    }, 
    "sata": {
      "type": "Optional[String]", 
      "description": "A hash/dictionary of volume used as sata hard disk or CD-ROM. C(sata='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - C(sata[n]) where 0 \u2264 n \u2264 5. Values allowed are -  C(\"storage:size,format=value\"). C(storage) is the storage identifier where to create the disk. C(size) is the size of the disk in GB. C(format) is the drive\u2019s backing file\u2019s data format. C(qcow2|raw|subvol)."
    }, 
    "protection": {
      "type": "Optional[String]", 
      "description": "Enable/disable the protection flag of the VM. This will enable/disable the remove VM and remove disk operations."
    }, 
    "reboot": {
      "type": "Optional[String]", 
      "description": "Allow reboot. If set to yes, the VM exit on reboot."
    }, 
    "hotplug": {
      "type": "Optional[String]", 
      "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features C('network', 'disk', 'cpu', 'memory' and 'usb'). Value 0 disables hotplug completely and value 1 is an alias for the default C('network,disk,usb')."
    }, 
    "api_user": {
      "type": "String", 
      "description": "Specify the user to authenticate with."
    }, 
    "parallel": {
      "type": "Optional[String]", 
      "description": "A hash/dictionary of map host parallel devices. C(parallel='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - (parallel[n]) where 0 \u2264 n \u2264 2. Values allowed are - C(\"/dev/parport\\d+|/dev/usb/lp\\d+\")."
    }, 
    "pool": {
      "type": "Optional[String]", 
      "description": "Add the new VM to the specified pool."
    }, 
    "target": {
      "type": "Optional[String]", 
      "description": "Target node. Only allowed if the original VM is on shared storage. Used only with clone"
    }, 
    "lock": {
      "type": "Optional[String]", 
      "description": "Lock/unlock the VM."
    }, 
    "ide": {
      "type": "Optional[String]", 
      "description": "A hash/dictionary of volume used as IDE hard disk or CD-ROM. C(ide='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - C(ide[n]) where 0 \u2264 n \u2264 3. Values allowed are - C(\"storage:size,format=value\"). C(storage) is the storage identifier where to create the disk. C(size) is the size of the disk in GB. C(format) is the drive\u2019s backing file\u2019s data format. C(qcow2|raw|subvol)."
    }, 
    "name": {
      "type": "Optional[String]", 
      "description": "Specifies the VM name. Only used on the configuration web interface. Required only for C(state=present)."
    }, 
    "update": {
      "type": "Optional[String]", 
      "description": "If C(yes), the VM will be update with new value. Cause of the operations of the API and security reasons, I have disabled the update of the following parameters C(net, virtio, ide, sata, scsi). Per example updating C(net) update the MAC address and C(virtio) create always new disk..."
    }, 
    "vmid": {
      "type": "Optional[String]", 
      "description": "Specifies the VM ID. Instead use I(name) parameter. If vmid is not set, the next available VM ID will be fetched from ProxmoxAPI."
    }, 
    "hugepages": {
      "type": "Optional[String]", 
      "description": "Enable/disable hugepages memory."
    }, 
    "bootdisk": {
      "type": "Optional[String]", 
      "description": "Enable booting from specified disk. C((ide|sata|scsi|virtio)\\d+)"
    }, 
    "ostype": {
      "type": "Optional[String]", 
      "description": "Specifies guest operating system. This is used to enable special optimization/features for specific operating systems. The l26 is Linux 2.6/3.X Kernel."
    }, 
    "acpi": {
      "type": "Optional[String]", 
      "description": "Specify if ACPI should be enables/disabled."
    }, 
    "vcpus": {
      "type": "Optional[String]", 
      "description": "Sets number of hotplugged vcpus."
    }, 
    "newid": {
      "type": "Optional[String]", 
      "description": "VMID for the clone. Used only with clone. If newid is not set, the next available VM ID will be fetched from ProxmoxAPI."
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "Timeout for operations."
    }, 
    "smbios": {
      "type": "Optional[String]", 
      "description": "Specifies SMBIOS type 1 fields."
    }, 
    "skiplock": {
      "type": "Optional[String]", 
      "description": "Ignore locks Only root is allowed to use this option."
    }, 
    "cores": {
      "type": "Optional[String]", 
      "description": "Specify number of cores per socket."
    }, 
    "scsi": {
      "type": "Optional[String]", 
      "description": "A hash/dictionary of volume used as SCSI hard disk or CD-ROM. C(scsi='{\"key\":\"value\", \"key\":\"value\"}'). Keys allowed are - C(sata[n]) where 0 \u2264 n \u2264 13. Values allowed are -  C(\"storage:size,format=value\"). C(storage) is the storage identifier where to create the disk. C(size) is the size of the disk in GB. C(format) is the drive\u2019s backing file\u2019s data format. C(qcow2|raw|subvol)."
    }, 
    "cpulimit": {
      "type": "Optional[String]", 
      "description": "Specify if CPU usage will be limited. Value 0 indicates no CPU limit. If the computer has 2 CPUs, it has total of '2' CPU time"
    }, 
    "validate_certs": {
      "type": "Optional[String]", 
      "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
    }, 
    "onboot": {
      "type": "Optional[String]", 
      "description": "Specifies whether a VM will be started during system bootup."
    }, 
    "delete": {
      "type": "Optional[String]", 
      "description": "Specify a list of settings you want to delete."
    }
  }
}