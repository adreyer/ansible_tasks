{
  "input_method": "stdin", 
  "description": "Allows you to create/delete/stop Qemu(KVM) Virtual Machines in Proxmox VE cluster.", 
  "parameters": {
    "storage": {
      "type": "Optional[String[0]]", 
      "description": "Target storage for full clone."
    }, 
    "force": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Allow to force stop VM."
    }, 
    "revert": {
      "type": "Optional[String[0]]", 
      "description": "Revert a pending change."
    }, 
    "numa": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionaries of NUMA topology. C(numa='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "scsihw": {
      "type": "Optional[Enum[\"lsi\", \"lsi53c810\", \"virtio-scsi-pci\", \"virtio-scsi-single\", \"megasas\", \"pvscsi\"]]", 
      "description": "Specifies the SCSI controller model."
    }, 
    "startup": {
      "type": "Optional[String[0]]", 
      "description": "Startup and shutdown behavior. C([[order=]\\d+] [,up=\\d+] [,down=\\d+])."
    }, 
    "migrate_speed": {
      "type": "Optional[String[0]]", 
      "description": "Sets maximum speed (in MB/s) for migrations."
    }, 
    "freeze": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Specify if PVE should freeze CPU at startup (use 'c' monitor command to start execution)."
    }, 
    "full": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Create a full copy of all disk. This is always done when you clone a normal VM."
    }, 
    "keyboard": {
      "type": "Optional[String[0]]", 
      "description": "Sets the keyboard layout for VNC server."
    }, 
    "watchdog": {
      "type": "Optional[String[0]]", 
      "description": "Creates a virtual hardware watchdog device."
    }, 
    "serial": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionary of serial device to create inside the VM. C('{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "sockets": {
      "type": "Optional[String[0]]", 
      "description": "Sets the number of CPU sockets. (1 - N)."
    }, 
    "digest": {
      "type": "Optional[String[0]]", 
      "description": "Specify if to prevent changes if current configuration file has different SHA1 digest."
    }, 
    "description": {
      "type": "Optional[String[0]]", 
      "description": "Specify the description for the VM. Only used on the configuration web interface."
    }, 
    "startdate": {
      "type": "Optional[String[0]]", 
      "description": "Sets the initial date of the real time clock."
    }, 
    "tablet": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Enables/disables the USB tablet device."
    }, 
    "bios": {
      "type": "Optional[Enum[\"seabios\", \"ovmf\"]]", 
      "description": "Specify the BIOS implementation."
    }, 
    "cpu": {
      "type": "Optional[String[0]]", 
      "description": "Specify emulated CPU type."
    }, 
    "balloon": {
      "type": "Optional[String[0]]", 
      "description": "Specify the amount of RAM for the VM in MB."
    }, 
    "cpuunits": {
      "type": "Optional[String[0]]", 
      "description": "Specify CPU weight for a VM."
    }, 
    "boot": {
      "type": "Optional[String[0]]", 
      "description": "Specify the boot order -> boot on floppy C(a), hard disk C(c), CD-ROM C(d), or network C(n)."
    }, 
    "vga": {
      "type": "Optional[Enum[\"std\", \"cirrus\", \"vmware\", \"qxl\", \"serial0\", \"serial1\", \"serial2\", \"serial3\", \"qxl2\", \"qxl3\", \"qxl4\"]]", 
      "description": "Select VGA type. If you want to use high resolution modes (>= 1280x1024x16) then you should use option 'std' or 'vmware'."
    }, 
    "shares": {
      "type": "Optional[String[0]]", 
      "description": "Rets amount of memory shares for auto-ballooning. (0 - 50000)."
    }, 
    "machine": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the Qemu machine type."
    }, 
    "hostpci": {
      "type": "Optional[String[0]]", 
      "description": "Specify a hash/dictionary of map host pci devices into guest. C(hostpci='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"started\", \"absent\", \"stopped\", \"restarted\", \"current\"]]", 
      "description": "Indicates desired state of the instance."
    }, 
    "autostart": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Specify, if the VM should be automatically restarted after crash (currently ignored in PVE API)."
    }, 
    "memory": {
      "type": "Optional[String[0]]", 
      "description": "Memory size in MB for instance."
    }, 
    "net": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionary of network interfaces for the VM. C(net='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "api_host": {
      "type": "String[0]", 
      "description": "Specify the target host of the Proxmox VE cluster."
    }, 
    "migrate_downtime": {
      "type": "Optional[String[0]]", 
      "description": "Sets maximum tolerated downtime (in seconds) for migrations."
    }, 
    "localtime": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Sets the real time clock to local time."
    }, 
    "node": {
      "type": "Optional[String[0]]", 
      "description": "Proxmox VE node, where the new VM will be created."
    }, 
    "agent": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Specify if the QEMU GuestAgent should be enabled/disabled."
    }, 
    "virtio": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionary of volume used as VIRTIO hard disk. C(virtio='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "template": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Enables/disables the template."
    }, 
    "format": {
      "type": "Optional[Enum[\"cloop\", \"cow\", \"qcow\", \"qcow2\", \"qed\", \"raw\", \"vmdk\"]]", 
      "description": "Target drive\u2019s backing file\u2019s data format."
    }, 
    "clone": {
      "type": "Optional[String[0]]", 
      "description": "Name of VM to be cloned. If C(vmid) is setted, C(clone) can take arbitrary value but required for intiating the clone."
    }, 
    "args": {
      "type": "Optional[String[0]]", 
      "description": "Pass arbitrary arguments to kvm."
    }, 
    "api_password": {
      "type": "Optional[String[0]]", 
      "description": "Specify the password to authenticate with."
    }, 
    "snapname": {
      "type": "Optional[String[0]]", 
      "description": "The name of the snapshot. Used only with clone."
    }, 
    "tdf": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Enables/disables time drift fix."
    }, 
    "kvm": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Enable/disable KVM hardware virtualization."
    }, 
    "sata": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionary of volume used as sata hard disk or CD-ROM. C(sata='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "protection": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Enable/disable the protection flag of the VM. This will enable/disable the remove VM and remove disk operations."
    }, 
    "reboot": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Allow reboot. If set to yes, the VM exit on reboot."
    }, 
    "hotplug": {
      "type": "Optional[String[0]]", 
      "description": "Selectively enable hotplug features."
    }, 
    "api_user": {
      "type": "String[0]", 
      "description": "Specify the user to authenticate with."
    }, 
    "parallel": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionary of map host parallel devices. C(parallel='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "pool": {
      "type": "Optional[String[0]]", 
      "description": "Add the new VM to the specified pool."
    }, 
    "target": {
      "type": "Optional[String[0]]", 
      "description": "Target node. Only allowed if the original VM is on shared storage."
    }, 
    "lock": {
      "type": "Optional[Enum[\"migrate\", \"backup\", \"snapshot\", \"rollback\"]]", 
      "description": "Lock/unlock the VM."
    }, 
    "ide": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionary of volume used as IDE hard disk or CD-ROM. C(ide='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "name": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the VM name. Only used on the configuration web interface."
    }, 
    "update": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "If C(yes), the VM will be update with new value."
    }, 
    "vmid": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the VM ID. Instead use I(name) parameter."
    }, 
    "hugepages": {
      "type": "Optional[Enum[\"any\", \"2\", \"1024\"]]", 
      "description": "Enable/disable hugepages memory."
    }, 
    "bootdisk": {
      "type": "Optional[String[0]]", 
      "description": "Enable booting from specified disk. C((ide|sata|scsi|virtio)\\d+)"
    }, 
    "ostype": {
      "type": "Optional[Enum[\"other\", \"wxp\", \"w2k\", \"w2k3\", \"w2k8\", \"wvista\", \"win7\", \"win8\", \"l24\", \"l26\", \"solaris\"]]", 
      "description": "Specifies guest operating system. This is used to enable special optimization/features for specific operating systems."
    }, 
    "acpi": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Specify if ACPI should be enables/disabled."
    }, 
    "vcpus": {
      "type": "Optional[String[0]]", 
      "description": "Sets number of hotplugged vcpus."
    }, 
    "newid": {
      "type": "Optional[String[0]]", 
      "description": "VMID for the clone. Used only with clone."
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "Timeout for operations."
    }, 
    "smbios": {
      "type": "Optional[String[0]]", 
      "description": "Specifies SMBIOS type 1 fields."
    }, 
    "skiplock": {
      "type": "Optional[String[0]]", 
      "description": "Ignore locks"
    }, 
    "cores": {
      "type": "Optional[String[0]]", 
      "description": "Specify number of cores per socket."
    }, 
    "scsi": {
      "type": "Optional[String[0]]", 
      "description": "A hash/dictionary of volume used as SCSI hard disk or CD-ROM. C(scsi='{\"key\":\"value\", \"key\":\"value\"}')."
    }, 
    "cpulimit": {
      "type": "Optional[String[0]]", 
      "description": "Specify if CPU usage will be limited. Value 0 indicates no CPU limit."
    }, 
    "validate_certs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
    }, 
    "onboot": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Specifies whether a VM will be started during system bootup."
    }, 
    "delete": {
      "type": "Optional[String[0]]", 
      "description": "Specify a list of settings you want to delete."
    }
  }
}