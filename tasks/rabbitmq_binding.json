{
  "input_method": "stdin", 
  "description": "This module uses rabbitMQ Rest API to create/delete bindings", 
  "parameters": {
    "login_port": {
      "type": "Optional[String[0]]", 
      "description": "rabbitMQ management api port"
    }, 
    "name": {
      "type": "String[0]", 
      "description": "source exchange to create binding on"
    }, 
    "login_user": {
      "type": "Optional[String[0]]", 
      "description": "rabbitMQ user for connection"
    }, 
    "login_host": {
      "type": "Optional[String[0]]", 
      "description": "rabbitMQ host for connection"
    }, 
    "destination": {
      "type": "String[0]", 
      "description": "destination exchange or queue for the binding"
    }, 
    "routing_key": {
      "type": "Optional[String[0]]", 
      "description": "routing key for the binding"
    }, 
    "vhost": {
      "type": "Optional[String[0]]", 
      "description": "rabbitMQ virtual host"
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Whether the exchange should be present or absent"
    }, 
    "arguments": {
      "type": "Optional[String[0]]", 
      "description": "extra arguments for exchange. If defined this argument is a key/value dictionary"
    }, 
    "login_password": {
      "type": "Optional[String[0]]", 
      "description": "rabbitMQ password for connection"
    }, 
    "destination_type": {
      "type": "Enum[\"queue\", \"exchange\"]", 
      "description": "Either queue or exchange"
    }
  }
}