{
  "input_method": "stdin", 
  "description": "Add or remove users to RabbitMQ and assign permissions", 
  "parameters": {
    "node": {
      "type": "Optional[String[0]]", 
      "description": "erlang node name of the rabbit we wish to configure"
    }, 
    "force": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Deletes and recreates the user."
    }, 
    "write_priv": {
      "type": "Optional[String[0]]", 
      "description": "Regular expression to restrict configure actions on a resource for the specified vhost."
    }, 
    "tags": {
      "type": "Optional[String[0]]", 
      "description": "User tags specified as comma delimited"
    }, 
    "read_priv": {
      "type": "Optional[String[0]]", 
      "description": "Regular expression to restrict configure actions on a resource for the specified vhost."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Specify if user is to be added or removed"
    }, 
    "user": {
      "type": "String[0]", 
      "description": "Name of user to add"
    }, 
    "configure_priv": {
      "type": "Optional[String[0]]", 
      "description": "Regular expression to restrict configure actions on a resource for the specified vhost."
    }, 
    "vhost": {
      "type": "Optional[String[0]]", 
      "description": "vhost to apply access privileges."
    }, 
    "password": {
      "type": "Optional[String[0]]", 
      "description": "Password of user to add."
    }, 
    "permissions": {
      "type": "Optional[String[0]]", 
      "description": "a list of dicts, each dict contains vhost, configure_priv, write_priv, and read_priv, and represents a permission rule for that vhost."
    }
  }
}