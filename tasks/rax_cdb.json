{
  "input_method": "stdin", 
  "description": "creates / deletes or resize a Rackspace Cloud Databases instance and optionally waits for it to be 'running'. The name option needs to be unique since it's used to identify the instance.", 
  "parameters": {
    "username": {
      "type": "Optional[String[0]]", 
      "description": "Rackspace username, overrides I(credentials)."
    }, 
    "cdb_type": {
      "type": "Optional[String[0]]", 
      "description": "type of instance (i.e. MySQL, MariaDB, Percona)"
    }, 
    "name": {
      "type": "Optional[String[0]]", 
      "description": "Name of the databases server instance"
    }, 
    "region": {
      "type": "Optional[String[0]]", 
      "description": "Region to create an instance in."
    }, 
    "verify_ssl": {
      "type": "Optional[String[0]]", 
      "description": "Whether or not to require SSL validation of API endpoints."
    }, 
    "cdb_version": {
      "type": "Optional[Enum[\"5.1\", \"5.6\", \"10\"]]", 
      "description": "version of database (MySQL supports 5.1 and 5.6, MariaDB supports 10, Percona supports 5.6)"
    }, 
    "volume": {
      "type": "Optional[String[0]]", 
      "description": "Volume size of the database 1-150GB"
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Indicate desired state of the resource"
    }, 
    "wait_timeout": {
      "type": "Optional[String[0]]", 
      "description": "how long before wait gives up, in seconds"
    }, 
    "env": {
      "type": "Optional[String[0]]", 
      "description": "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
    }, 
    "credentials": {
      "type": "Optional[String[0]]", 
      "description": "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
    }, 
    "flavor": {
      "type": "Optional[String[0]]", 
      "description": "flavor to use for the instance 1 to 6 (i.e. 512MB to 16GB)"
    }, 
    "api_key": {
      "type": "Optional[String[0]]", 
      "description": "Rackspace API key, overrides I(credentials)."
    }, 
    "wait": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "wait for the instance to be in state 'running' before returning"
    }
  }
}