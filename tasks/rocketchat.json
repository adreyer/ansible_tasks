{
  "input_method": "stdin", 
  "description": "The C(rocketchat) module sends notifications to Rocket Chat via the Incoming WebHook integration", 
  "parameters": {
    "username": {
      "type": "Optional[String[0]]", 
      "description": "This is the sender of the message."
    }, 
    "domain": {
      "type": "String[0]", 
      "description": "The domain for your environment without protocol. (i.e. C(example.com) or C(chat.example.com))"
    }, 
    "protocol": {
      "type": "Optional[Enum[\"http\", \"https\"]]", 
      "description": "Specify the protocol used to send notification messages before the webhook url. (i.e. http or https)"
    }, 
    "attachments": {
      "type": "Optional[String[0]]", 
      "description": "Define a list of attachments."
    }, 
    "color": {
      "type": "Optional[Enum[\"normal\", \"good\", \"warning\", \"danger\"]]", 
      "description": "Allow text to use default colors - use the default of 'normal' to not send a custom color bar at the start of the message"
    }, 
    "icon_url": {
      "type": "Optional[String[0]]", 
      "description": "URL for the message sender's icon."
    }, 
    "token": {
      "type": "String[0]", 
      "description": "Rocket Chat Incoming Webhook integration token.  This provides authentication to Rocket Chat's Incoming webhook for posting messages."
    }, 
    "icon_emoji": {
      "type": "Optional[String[0]]", 
      "description": "Emoji for the message sender. The representation for the available emojis can be got from Rocket Chat. (for example :thumbsup:) (if I(icon_emoji) is set, I(icon_url) will not be used)"
    }, 
    "link_names": {
      "type": "Optional[Enum[\"1\", \"0\"]]", 
      "description": "Automatically create links for channels and usernames in I(msg)."
    }, 
    "msg": {
      "type": "Optional[String[0]]", 
      "description": "Message to be sent."
    }, 
    "validate_certs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
    }, 
    "channel": {
      "type": "Optional[String[0]]", 
      "description": "Channel to send the message to. If absent, the message goes to the channel selected for the I(token) specifed during the creation of webhook."
    }
  }
}