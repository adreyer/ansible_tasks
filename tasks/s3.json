{
  "input_method": "stdin", 
  "description": "This module allows the user to manage S3 buckets and the objects within them. Includes support for creating and deleting both objects and buckets, retrieving objects as files or strings and generating download links. This module has a dependency on python-boto.", 
  "parameters": {
    "prefix": {
      "type": "Optional[String[0]]", 
      "description": "Limits the response to keys that begin with the specified prefix for list mode"
    }, 
    "ec2_url": {
      "type": "Optional[String[0]]", 
      "description": "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
    }, 
    "marker": {
      "type": "Optional[String[0]]", 
      "description": "Specifies the key to start with when using list mode. Object keys are returned in alphabetical order, starting with key after the marker in order."
    }, 
    "ignore_nonexistent_bucket": {
      "type": "Optional[String[0]]", 
      "description": "Overrides initial bucket lookups in case bucket or iam policies are restrictive. Example: a user may have the GetObject permission but no other permissions. In this case using the option mode: get will fail without specifying ignore_nonexistent_bucket: True.\n"
    }, 
    "overwrite": {
      "type": "Optional[String[0]]", 
      "description": "Force overwrite either locally on the filesystem or remotely with the object/key. Used with PUT and GET operations. Boolean or one of [always, never, different], true is equal to 'always' and false is equal to 'never', new in 2.0"
    }, 
    "aws_secret_key": {
      "type": "Optional[String[0]]", 
      "description": "AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used."
    }, 
    "encrypt": {
      "type": "Optional[String[0]]", 
      "description": "When set for PUT mode, asks for server-side encryption"
    }, 
    "rgw": {
      "type": "Optional[String[0]]", 
      "description": "Enable Ceph RGW S3 support. This option requires an explicit url via s3_url."
    }, 
    "max_keys": {
      "type": "Optional[String[0]]", 
      "description": "Max number of results to return in list mode, set this if you want to retrieve fewer than the default 1000 keys."
    }, 
    "version": {
      "type": "Optional[String[0]]", 
      "description": "Version ID of the object inside the bucket. Can be used to get a specific version of a file if versioning is enabled in the target bucket."
    }, 
    "s3_url": {
      "type": "Optional[String[0]]", 
      "description": "S3 URL endpoint for usage with Ceph, Eucalypus, fakes3, etc.  Otherwise assumes AWS"
    }, 
    "expiration": {
      "type": "Optional[String[0]]", 
      "description": "Time limit (in seconds) for the URL generated and returned by S3/Walrus when performing a mode=put or mode=geturl operation."
    }, 
    "profile": {
      "type": "Optional[String[0]]", 
      "description": "Uses a boto profile. Only works with boto >= 2.24.0."
    }, 
    "permission": {
      "type": "Optional[String[0]]", 
      "description": "This option lets the user set the canned permissions on the object/bucket that are created. The permissions that can be set are 'private', 'public-read', 'public-read-write', 'authenticated-read'. Multiple permissions can be specified as a list."
    }, 
    "dest": {
      "type": "Optional[String[0]]", 
      "description": "The destination file path when downloading an object/key with a GET operation."
    }, 
    "object": {
      "type": "Optional[String[0]]", 
      "description": "Keyname of the object inside the bucket. Can be used to create \"virtual directories\", see examples."
    }, 
    "src": {
      "type": "Optional[String[0]]", 
      "description": "The source file path when performing a PUT operation."
    }, 
    "retries": {
      "type": "Optional[String[0]]", 
      "description": "On recoverable failure, how many times to retry before actually failing."
    }, 
    "aws_access_key": {
      "type": "Optional[String[0]]", 
      "description": "AWS access key id. If not set then the value of the AWS_ACCESS_KEY environment variable is used."
    }, 
    "security_token": {
      "type": "Optional[String[0]]", 
      "description": "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
    }, 
    "region": {
      "type": "Optional[String[0]]", 
      "description": "AWS region to create the bucket in. If not set then the value of the AWS_REGION and EC2_REGION environment variables are checked, followed by the aws_region and ec2_region settings in the Boto config file.  If none of those are set the region defaults to the S3 Location: US Standard.  Prior to ansible 1.8 this parameter could be specified but had no effect.\n"
    }, 
    "bucket": {
      "type": "String[0]", 
      "description": "Bucket name."
    }, 
    "headers": {
      "type": "Optional[String[0]]", 
      "description": "Custom headers for PUT operation, as a dictionary of 'key=value' and 'key=value,key=value'."
    }, 
    "mode": {
      "type": "Enum[\"get\", \"put\", \"delete\", \"create\", \"geturl\", \"getstr\", \"delobj\", \"list\"]", 
      "description": "Switches the module behaviour between put (upload), get (download), geturl (return download url, Ansible 1.3+), getstr (download object as string (1.3+)), list (list keys, Ansible 2.0+), create (bucket), delete (bucket), and delobj (delete object, Ansible 2.0+)."
    }, 
    "metadata": {
      "type": "Optional[String[0]]", 
      "description": "Metadata for PUT operation, as a dictionary of 'key=value' and 'key=value,key=value'."
    }, 
    "validate_certs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
    }
  }
}