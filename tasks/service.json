{
  "input_method": "stdin", 
  "description": "Controls services on remote hosts. Supported init systems include BSD init, OpenRC, SysV, Solaris SMF, systemd, upstart.", 
  "parameters": {
    "use": {
      "type": "Optional[String[0]]", 
      "description": "The service module actually uses system specific modules, normally through auto detection, this setting can force a specific module."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "Name of the service."
    }, 
    "pattern": {
      "type": "Optional[String[0]]", 
      "description": "If the service does not respond to the status command, name a substring to look for as would be found in the output of the I(ps) command as a stand-in for a status result.  If the string is found, the service will be assumed to be running."
    }, 
    "enabled": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Whether the service should start on boot. B(At least one of state and enabled are required.)"
    }, 
    "state": {
      "type": "Optional[Enum[\"started\", \"stopped\", \"restarted\", \"reloaded\"]]", 
      "description": "C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the service.  C(reloaded) will always reload. B(At least one of state and enabled are required.) Note that reloaded will start the service if it is not already started, even if your chosen init system wouldn't normally."
    }, 
    "sleep": {
      "type": "Optional[String[0]]", 
      "description": "If the service is being C(restarted) then sleep this many seconds between the stop and start command. This helps to workaround badly behaving init scripts that exit immediately after signaling a process to stop."
    }, 
    "arguments": {
      "type": "Optional[String[0]]", 
      "description": "Additional arguments provided on the command line"
    }, 
    "runlevel": {
      "type": "Optional[String[0]]", 
      "description": "For OpenRC init scripts (ex: Gentoo) only.  The runlevel that this service belongs to."
    }
  }
}