{
  "input_method": "stdin", 
  "description": "Create, update, or destroy Ansible Tower roles. See U(https://www.ansible.com/tower) for an overview.", 
  "parameters": {
    "credential": {
      "type": "Optional[String[0]]", 
      "description": "Credential the role acts on."
    }, 
    "job_template": {
      "type": "Optional[String[0]]", 
      "description": "The job_template the role acts on."
    }, 
    "tower_host": {
      "type": "Optional[String[0]]", 
      "description": "URL to your Tower instance."
    }, 
    "tower_password": {
      "type": "Optional[String[0]]", 
      "description": "Password for your Tower instance."
    }, 
    "project": {
      "type": "Optional[String[0]]", 
      "description": "Project the role acts on."
    }, 
    "tower_config_file": {
      "type": "Optional[String[0]]", 
      "description": "Path to the Tower config file. See notes."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"absent\"]]", 
      "description": "Desired state of the resource."
    }, 
    "role": {
      "type": "Enum[\"admin\", \"read\", \"member\", \"execute\", \"adhoc\", \"update\", \"use\", \"auditor\"]", 
      "description": "The role type to grant/revoke."
    }, 
    "inventory": {
      "type": "Optional[String[0]]", 
      "description": "Inventory the role acts on."
    }, 
    "team": {
      "type": "Optional[String[0]]", 
      "description": "Team that receives the permissions specified by the role."
    }, 
    "tower_username": {
      "type": "Optional[String[0]]", 
      "description": "Username for your Tower instance."
    }, 
    "organization": {
      "type": "Optional[String[0]]", 
      "description": "Organiation the role acts on."
    }, 
    "target_team": {
      "type": "Optional[String[0]]", 
      "description": "Team that the role acts on."
    }, 
    "tower_verify_ssl": {
      "type": "Optional[String[0]]", 
      "description": "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
    }, 
    "user": {
      "type": "Optional[String[0]]", 
      "description": "User that receives the permissions specified by the role."
    }
  }
}