{
  "input_method": "stdin", 
  "description": "Manage SmartOS virtual machines through vmadm(1M).", 
  "parameters": {
    "customer_metadata": {
      "type": "Optional[String[0]]", 
      "description": "Metadata to be set and associated with this VM, this contain customer modifiable keys."
    }, 
    "disk_driver": {
      "type": "Optional[String[0]]", 
      "description": "Default value for a virtual disk model for KVM guests."
    }, 
    "force": {
      "type": "Optional[String[0]]", 
      "description": "Force a particular action (i.e. stop or delete a VM)."
    }, 
    "zfs_root_compression": {
      "type": "Optional[String[0]]", 
      "description": "Specifies compression algorithm used for this VMs root dataset. This option only has effect on the zoneroot dataset."
    }, 
    "virtio_txtimer": {
      "type": "Optional[String[0]]", 
      "description": "Timeout (in nanoseconds) for the TX timer of virtio NICs."
    }, 
    "spice_password": {
      "type": "Optional[String[0]]", 
      "description": "Password required to connect to SPICE. By default no password is set. Please note this can be read from the Global Zone."
    }, 
    "zfs_io_priority": {
      "type": "Optional[String[0]]", 
      "description": "IO throttle priority value relative to other VMs."
    }, 
    "ram": {
      "type": "Optional[String[0]]", 
      "description": "Amount of virtual RAM for a KVM guest (in MiBs)."
    }, 
    "dns_domain": {
      "type": "Optional[String[0]]", 
      "description": "Domain value for C(/etc/hosts)."
    }, 
    "max_physical_memory": {
      "type": "Optional[String[0]]", 
      "description": "Maximum amount of memory (in MiBs) on the host that the VM is allowed to use."
    }, 
    "nic_driver": {
      "type": "Optional[String[0]]", 
      "description": "Default value for a virtual NIC model for KVM guests."
    }, 
    "zfs_data_compression": {
      "type": "Optional[String[0]]", 
      "description": "Specifies compression algorithm used for this VMs data dataset. This option only has effect on delegated datasets."
    }, 
    "image_uuid": {
      "type": "Optional[String[0]]", 
      "description": "Image UUID."
    }, 
    "fs_allowed": {
      "type": "Optional[String[0]]", 
      "description": "Comma separated list of filesystem types this zone is allowed to mount."
    }, 
    "qemu_opts": {
      "type": "Optional[String[0]]", 
      "description": "Additional qemu arguments for KVM guests. This overwrites the default arguments provided by vmadm(1M) and should only be used for debugging."
    }, 
    "virtio_txburst": {
      "type": "Optional[String[0]]", 
      "description": "Number of packets that can be sent in a single flush of the tx queue of virtio NICs."
    }, 
    "firewall_enabled": {
      "type": "Optional[String[0]]", 
      "description": "Enables the firewall, allowing fwadm(1M) rules to be applied."
    }, 
    "mdata_exec_timeout": {
      "type": "Optional[String[0]]", 
      "description": "Timeout in seconds (or 0 to disable) for the C(svc:/smartdc/mdata:execute) service that runs user-scripts in the zone."
    }, 
    "spice_opts": {
      "type": "Optional[String[0]]", 
      "description": "Addition options for SPICE-enabled KVM VMs."
    }, 
    "nics": {
      "type": "Optional[String[0]]", 
      "description": "A list of nics to add, valid properties are documented in vmadm(1M)."
    }, 
    "hostname": {
      "type": "Optional[String[0]]", 
      "description": "Zone/VM hostname."
    }, 
    "boot": {
      "type": "Optional[String[0]]", 
      "description": "Set the boot order for KVM VMs."
    }, 
    "vga": {
      "type": "Optional[String[0]]", 
      "description": "Specify VGA emulation used by KVM VMs."
    }, 
    "name": {
      "type": "Optional[String[0]]", 
      "description": "Name of the VM. vmadm(1M) uses this as an optional name."
    }, 
    "zfs_snapshot_limit": {
      "type": "Optional[String[0]]", 
      "description": "Number of snapshots the VM can have."
    }, 
    "state": {
      "type": "Enum[\"present\", \"absent\", \"stopped\", \"restarted\"]", 
      "description": "States for the VM to be in. Please note that C(present), C(stopped) and C(restarted) operate on a VM that is currently provisioned. C(present) means that the VM will be created if it was absent, and that it will be in a running state. C(absent) will shutdown the zone before removing it. C(stopped) means the zone will be created if it doesn't exist already, before shutting it down."
    }, 
    "limit_priv": {
      "type": "Optional[String[0]]", 
      "description": "Set (comma separated) list of privileges the zone is allowed to use."
    }, 
    "cpu_cap": {
      "type": "Optional[String[0]]", 
      "description": "Sets a limit on the amount of CPU time that can be used by a VM. Use C(0) for no cap."
    }, 
    "maintain_resolvers": {
      "type": "Optional[String[0]]", 
      "description": "Resolvers in C(/etc/resolv.conf) will be updated when updating the I(resolvers) property."
    }, 
    "zfs_data_recsize": {
      "type": "Optional[String[0]]", 
      "description": "Suggested block size (power of 2) for files in the delegated dataset's filesystem."
    }, 
    "qemu_extra_opts": {
      "type": "Optional[String[0]]", 
      "description": "Additional qemu cmdline arguments for KVM guests."
    }, 
    "vnc_password": {
      "type": "Optional[String[0]]", 
      "description": "Password required to connect to VNC. By default no password is set. Please note this can be read from the Global Zone."
    }, 
    "max_swap": {
      "type": "Optional[String[0]]", 
      "description": "Maximum amount of virtual memory (in MiBs) the VM is allowed to use."
    }, 
    "zfs_root_recsize": {
      "type": "Optional[String[0]]", 
      "description": "Suggested block size (power of 2) for files in the zoneroot dataset's filesystem."
    }, 
    "brand": {
      "type": "Optional[Enum[\"joyent\", \"joyent-minimal\", \"kvm\", \"lx\"]]", 
      "description": "Type of virtual machine."
    }, 
    "zfs_filesystem_limit": {
      "type": "Optional[String[0]]", 
      "description": "Maximum number of filesystems the VM can have."
    }, 
    "quota": {
      "type": "Optional[String[0]]", 
      "description": "Quota on zone filesystems (in MiBs)."
    }, 
    "filesystems": {
      "type": "Optional[String[0]]", 
      "description": "Mount additional filesystems into an OS VM."
    }, 
    "autoboot": {
      "type": "Optional[String[0]]", 
      "description": "Whether or not a VM is booted when the system is rebooted."
    }, 
    "tmpfs": {
      "type": "Optional[String[0]]", 
      "description": "Amount of memory (in MiBs) that will be available in the VM for the C(/tmp) filesystem."
    }, 
    "indestructible_zoneroot": {
      "type": "Optional[String[0]]", 
      "description": "Adds an C(@indestructible) snapshot to zoneroot."
    }, 
    "resolvers": {
      "type": "Optional[String[0]]", 
      "description": "List of resolvers to be put into C(/etc/resolv.conf)."
    }, 
    "max_lwps": {
      "type": "Optional[String[0]]", 
      "description": "Maximum number of lightweight processes this VM is allowed to have running."
    }, 
    "nowait": {
      "type": "Optional[String[0]]", 
      "description": "Consider the provisioning complete when the VM first starts, rather than when the VM has rebooted."
    }, 
    "indestructible_delegated": {
      "type": "Optional[String[0]]", 
      "description": "Adds an C(@indestructible) snapshot to delegated datasets."
    }, 
    "kernel_version": {
      "type": "Optional[String[0]]", 
      "description": "Kernel version to emulate for LX VMs."
    }, 
    "max_locked_memory": {
      "type": "Optional[String[0]]", 
      "description": "Total amount of memory (in MiBs) on the host that can be locked by this VM."
    }, 
    "disks": {
      "type": "Optional[String[0]]", 
      "description": "A list of disks to add, valid properties are documented in vmadm(1M)."
    }, 
    "uuid": {
      "type": "Optional[String[0]]", 
      "description": "UUID of the VM. Can either be a full UUID or C(*) for all VMs."
    }, 
    "internal_metadata_namespace": {
      "type": "Optional[String[0]]", 
      "description": "List of namespaces to be set as I(internal_metadata-only); these namespaces will come from I(internal_metadata) rather than I(customer_metadata)."
    }, 
    "delegate_dataset": {
      "type": "Optional[String[0]]", 
      "description": "Whether to delegate a ZFS dataset to an OS VM."
    }, 
    "archive_on_delete": {
      "type": "Optional[String[0]]", 
      "description": "When enabled, the zone dataset will be mounted on C(/zones/archive) upon removal."
    }, 
    "vcpus": {
      "type": "Optional[String[0]]", 
      "description": "Number of virtual CPUs for a KVM guest."
    }, 
    "internal_metadata": {
      "type": "Optional[String[0]]", 
      "description": "Metadata to be set and associated with this VM, this contains operator generated keys."
    }, 
    "cpu_type": {
      "type": "Optional[Enum[\"qemu64\", \"host\"]]", 
      "description": "Control the type of virtual CPU exposed to KVM VMs."
    }, 
    "routes": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary that maps destinations to gateways, these will be set as static routes in the VM."
    }, 
    "zpool": {
      "type": "Optional[String[0]]", 
      "description": "ZFS pool the VM's zone dataset will be created in."
    }, 
    "cpu_shares": {
      "type": "Optional[String[0]]", 
      "description": "Sets a limit on the number of fair share scheduler (FSS) CPU shares for a VM. This limit is relative to all other VMs on the system."
    }, 
    "vnc_port": {
      "type": "Optional[String[0]]", 
      "description": "TCP port to listen of the VNC server. Or set C(0) for random, or C(-1) to disable."
    }
  }
}