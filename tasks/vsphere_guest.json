{
  "input_method": "stdin", 
  "description": "Create/delete/reconfigure a guest VM through VMware vSphere. This module has a dependency on pysphere >= 1.7", 
  "parameters": {
    "username": {
      "type": "String[0]", 
      "description": "Username to connect to vcenter as."
    }, 
    "resource_pool": {
      "type": "Optional[String[0]]", 
      "description": "The name of the resource_pool to create the VM in."
    }, 
    "password": {
      "type": "String[0]", 
      "description": "Password of the user to connect to vcenter as."
    }, 
    "force": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Boolean. Allows you to run commands which may alter the running state of a guest. Also used to reconfigure and destroy."
    }, 
    "guest": {
      "type": "String[0]", 
      "description": "The virtual server name you wish to manage."
    }, 
    "vm_disk": {
      "type": "Optional[String[0]]", 
      "description": "A key, value list of disks and their sizes and which datastore to keep it in."
    }, 
    "vm_hw_version": {
      "type": "Optional[String[0]]", 
      "description": "Desired hardware version identifier (for example, \"vmx-08\" for vms that needs to be managed with vSphere Client). Note that changing hardware version of existing vm is not supported."
    }, 
    "esxi": {
      "type": "Optional[String[0]]", 
      "description": "Dictionary which includes datacenter and hostname on which the VM should be created. For standalone ESXi hosts, ha-datacenter should be used as the datacenter name"
    }, 
    "vm_nic": {
      "type": "Optional[String[0]]", 
      "description": "A key, value list of nics, their types and what network to put them on."
    }, 
    "vm_hardware": {
      "type": "Optional[String[0]]", 
      "description": "A key, value list of VM config settings. Must include ['memory_mb', 'num_cpus', 'osid', 'scsi']."
    }, 
    "from_template": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Specifies if the VM should be deployed from a template (mutually exclusive with 'state' parameter). No guest customization changes to hardware such as CPU, RAM, NICs or Disks can be applied when launching from template."
    }, 
    "cluster": {
      "type": "Optional[String[0]]", 
      "description": "The name of the cluster to create the VM in. By default this is derived from the host you tell the module to build the guest on."
    }, 
    "state": {
      "type": "Optional[Enum[\"present\", \"powered_off\", \"absent\", \"powered_on\", \"restarted\", \"reconfigured\"]]", 
      "description": "Indicate desired state of the vm. 'reconfigured' only applies changes to 'vm_cdrom', 'memory_mb', and 'num_cpus' in vm_hardware parameter. The 'memory_mb' and 'num_cpus' changes are applied to powered-on vms when hot-plugging is enabled for the guest."
    }, 
    "vmware_guest_facts": {
      "type": "Optional[String[0]]", 
      "description": "Gather facts from vCenter on a particular VM"
    }, 
    "vm_extra_config": {
      "type": "Optional[String[0]]", 
      "description": "A key, value pair of any extra values you want set or changed in the vmx file of the VM. Useful to set advanced options on the VM."
    }, 
    "power_on_after_clone": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Specifies if the VM should be powered on after the clone."
    }, 
    "vcenter_hostname": {
      "type": "String[0]", 
      "description": "The hostname of the vcenter server the module will connect to, to create the guest."
    }, 
    "validate_certs": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Validate SSL certs.  Note, if running on python without SSLContext support (typically, python < 2.7.9) you will have to set this to C(no) as pysphere does not support validating certificates on older python. Prior to 2.1, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8."
    }, 
    "template_src": {
      "type": "Optional[String[0]]", 
      "description": "Name of the source template to deploy from"
    }, 
    "snapshot_to_clone": {
      "type": "Optional[String[0]]", 
      "description": "A string that when specified, will create a linked clone copy of the VM. Snapshot must already be taken in vCenter."
    }
  }
}