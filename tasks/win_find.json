{
  "description": "return a list of files based on specific criteria", 
  "parameters": {
    "paths": {
      "type": "String", 
      "description": "List of paths of directories to search for files or folders in. This can be supplied as a single path or a list of paths."
    }, 
    "file_type": {
      "type": "Optional[String]", 
      "description": "T y p e   o f   f i l e   t o   s e a r c h   f o r"
    }, 
    "checksum_algorithm": {
      "type": "Optional[String]", 
      "description": "Algorithm to determine the checksum of a file. Will throw an error if the host is unable to use specified algorithm."
    }, 
    "age": {
      "type": "Optional[String]", 
      "description": "Select files or folders whose age is equal to or greater than the specified time. Use a negative age to find files equal to or less than the specified time. You can choose seconds, minutes, hours, days or weeks by specifying the first letter of an of those words (e.g., \"2s\", \"10d\", 1w\")."
    }, 
    "recurse": {
      "type": "Optional[String]", 
      "description": "Will recursively descend into the directory looking for files or folders"
    }, 
    "age_stamp": {
      "type": "Optional[String]", 
      "description": "Choose the file property against which we compare C(age). The default attribute we compare with is the last modification time."
    }, 
    "patterns": {
      "type": "Optional[String]", 
      "description": "One or more (powershell or regex) patterns to compare filenames with. The type of pattern matching is controlled by C(use_regex) option. The patterns retrict the list of files or folders to be returned based on the filenames. For a file to be matched it only has to match with one pattern in a list provided."
    }, 
    "get_checksum": {
      "type": "Optional[String]", 
      "description": "Whether to return a checksum of the file in the return info (default sha1), use C(checksum_algorithm) to change from the default."
    }, 
    "use_regex": {
      "type": "Optional[String]", 
      "description": "Will set patterns to run as a regex check if true"
    }, 
    "follow": {
      "type": "Optional[String]", 
      "description": "Set this to true to follow symlinks in the path. This needs to be used in conjunction with C(recurse)."
    }, 
    "hidden": {
      "type": "Optional[String]", 
      "description": "S e t   t h i s   t o   i n c l u d e   h i d d e n   f i l e s   o r   f o l d e r s"
    }, 
    "size": {
      "type": "Optional[String]", 
      "description": "Select files or folders whose size is equal to or greater than the specified size. Use a negative value to find files equal to or less than the specified size. You can specify the size with a suffix of the byte type i.e. kilo = k, mega = m... Size is not evaluated for symbolic links."
    }
  }
}