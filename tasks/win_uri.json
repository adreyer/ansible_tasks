{
  "description": "Interacts with webservices", 
  "parameters": {
    "body": {
      "type": "Optional[String]", 
      "description": "The body of the HTTP request/response to the web service."
    }, 
    "timeout": {
      "type": "Optional[String]", 
      "description": "Specifies how long the request can be pending before it times out (in seconds). The value 0 (zero) specifies an indefinite time-out. A Domain Name System (DNS) query can take up to 15 seconds to return or time out. If your request contains a host name that requires resolution, and you set C(timeout) to a value greater than zero, but less than 15 seconds, it can take 15 seconds or more before your request times out."
    }, 
    "headers": {
      "type": "Optional[String]", 
      "description": "Key Value pairs for headers. Example \"Host: www.somesite.com\""
    }, 
    "dest": {
      "type": "Optional[String]", 
      "description": "Output the response body to a file."
    }, 
    "status_code": {
      "type": "Optional[String]", 
      "description": "A valid, numeric, HTTP status code that signifies success of the request. Can also be comma separated list of status codes."
    }, 
    "removes": {
      "type": "Optional[String]", 
      "description": "A filename, when it does not exist, this step will be skipped."
    }, 
    "use_basic_parsing": {
      "type": "Optional[Boolean]", 
      "description": "This module relies upon 'Invoke-WebRequest', which by default uses the Internet Explorer Engine to parse a webpage. There's an edge-case where if a user hasn't run IE before, this will fail. The only advantage to using the Internet Explorer praser is that you can traverse the DOM in a powershell script. That isn't useful for Ansible, so by default we toggle 'UseBasicParsing'. However, you can toggle that off here."
    }, 
    "client_cert": {
      "type": "Optional[String]", 
      "description": "Specifies the client certificate(.pfx)  that is used for a secure web request."
    }, 
    "creates": {
      "type": "Optional[String]", 
      "description": "A filename, when it already exists, this step will be skipped."
    }, 
    "url": {
      "type": "String", 
      "description": "Supports FTP, HTTP or HTTPS URLs in the form of (ftp|http|https)://host.domain:port/path. Also supports file:/// URLs through Invoke-WebRequest."
    }, 
    "maximum_redirection": {
      "type": "Optional[String]", 
      "description": "Specifies how many times C(win_uri) redirects a connection to an alternate Uniform Resource Identifier (URI) before the connection fails. If C(maximum_redirection) is set to 0 (zero) or C(follow_redirects) is set to C(none), or set to C(safe) when not doing C(GET) or C(HEAD) it prevents all redirection."
    }, 
    "content_type": {
      "type": "Optional[String]", 
      "description": "Sets the \"Content-Type\" header."
    }, 
    "follow_redirects": {
      "type": "Optional[String]", 
      "description": "Whether or not the C(win_uri) module should follow redirects. C(all) will follow all redirects. C(none) will not follow any redirects. C(safe) will follow only \"safe\" redirects, where \"safe\" means that the client is only doing a C(GET) or C(HEAD) on the URI to which it is being redirected."
    }, 
    "return_content": {
      "type": "Optional[Boolean]", 
      "description": "Whether or not to return the body of the request as a \"content\" key in the dictionary result. If the reported Content-type is \"application/json\", then the JSON is additionally loaded into a key called C(json) in the dictionary results."
    }, 
    "password": {
      "type": "Optional[String]", 
      "description": "Password to use for authentication."
    }, 
    "validate_certs": {
      "type": "Optional[Boolean]", 
      "description": "If C(no), SSL certificates will not be validated.  This should only set to C(no) used on personally controlled sites using self-signed certificates."
    }, 
    "method": {
      "type": "Optional[String]", 
      "description": "The HTTP Method of the request or response."
    }, 
    "user": {
      "type": "Optional[String]", 
      "description": "Username to use for authentication."
    }
  }
}