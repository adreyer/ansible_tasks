{
  "input_method": "stdin", 
  "description": "Add or remove YUM repositories in RPM-based Linux distributions.", 
  "parameters": {
    "seuser": {
      "type": "Optional[String[0]]", 
      "description": "User part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available."
    }, 
    "ip_resolve": {
      "type": "Optional[Enum[\"4\", \"6\", \"IPv4\", \"IPv6\", \"whatever\"]]", 
      "description": "Determines how yum resolves host names."
    }, 
    "enabled": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "This tells yum whether or not use this repository."
    }, 
    "proxy_password": {
      "type": "Optional[String[0]]", 
      "description": "Username to use for proxy."
    }, 
    "mode": {
      "type": "Optional[String[0]]", 
      "description": "Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
    }, 
    "mirrorlist_expire": {
      "type": "Optional[String[0]]", 
      "description": "Time (in seconds) after which the mirrorlist locally cached will expire."
    }, 
    "bandwidth": {
      "type": "Optional[String[0]]", 
      "description": "Maximum available network bandwidth in bytes/second. Used with the I(throttle) option."
    }, 
    "cost": {
      "type": "Optional[String[0]]", 
      "description": "Relative cost of accessing this repository. Useful for weighing one repo's packages as greater/less than any other."
    }, 
    "file": {
      "type": "Optional[String[0]]", 
      "description": "File to use to save the repo in. Defaults to the value of I(name)."
    }, 
    "owner": {
      "type": "Optional[String[0]]", 
      "description": "Name of the user that should own the file/directory, as would be fed to I(chown)."
    }, 
    "exclude": {
      "type": "Optional[String[0]]", 
      "description": "List of packages to exclude from updates or installs. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed."
    }, 
    "attributes": {
      "type": "Optional[String[0]]", 
      "description": "Attributes the file or directory should have. To get supported flags look at the man page for I(chattr) on the target system. This string should contain the attributes in the same order as the one displayed by I(lsattr)."
    }, 
    "keepalive": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "This tells yum whether or not HTTP/1.1 keepalive should be used with this repository. This can improve transfer speeds by using one connection when downloading multiple files from a repository."
    }, 
    "repo_gpgcheck": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "This tells yum whether or not it should perform a GPG signature check on the repodata from this repository."
    }, 
    "group": {
      "type": "Optional[String[0]]", 
      "description": "Name of the group that should own the file/directory, as would be fed to I(chown)."
    }, 
    "failovermethod": {
      "type": "Optional[Enum[\"roundrobin\", \"priority\"]]", 
      "description": "C(roundrobin) randomly selects a URL out of the list of URLs to start with and proceeds through each of them as it encounters a failure contacting the host."
    }, 
    "unsafe_writes": {
      "type": "Optional[String[0]]", 
      "description": "Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this. One example are docker mounted files, they cannot be updated atomically and can only be done in an unsafe manner."
    }, 
    "deltarpm_metadata_percentage": {
      "type": "Optional[String[0]]", 
      "description": "When the relative size of deltarpm metadata vs pkgs is larger than this, deltarpm metadata is not downloaded from the repo. Note that you can give values over C(100), so C(200) means that the metadata is required to be half the size of the packages. Use C(0) to turn off this check, and always download metadata."
    }, 
    "gpgkey": {
      "type": "Optional[String[0]]", 
      "description": "A URL pointing to the ASCII-armored GPG key file for the repository."
    }, 
    "serole": {
      "type": "Optional[String[0]]", 
      "description": "Role part of SELinux file context, C(_default) feature works as for I(seuser)."
    }, 
    "http_caching": {
      "type": "Optional[Enum[\"all\", \"packages\", \"none\"]]", 
      "description": "Determines how upstream HTTP caches are instructed to handle any HTTP downloads that Yum does."
    }, 
    "retries": {
      "type": "Optional[String[0]]", 
      "description": "Set the number of times any attempt to retrieve a file should retry before returning an error. Setting this to C(0) makes yum try forever."
    }, 
    "priority": {
      "type": "Optional[String[0]]", 
      "description": "Enforce ordered protection of repositories. The value is an integer from 1 to 99."
    }, 
    "setype": {
      "type": "Optional[String[0]]", 
      "description": "Type part of SELinux file context, C(_default) feature works as for I(seuser)."
    }, 
    "mirrorlist": {
      "type": "Optional[String[0]]", 
      "description": "Specifies a URL to a file containing a list of baseurls."
    }, 
    "params": {
      "type": "Optional[String[0]]", 
      "description": "Option used to allow the user to overwrite any of the other options. To remove an option, set the value of the option to C(null)."
    }, 
    "gpgcheck": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Tells yum whether or not it should perform a GPG signature check on packages."
    }, 
    "include": {
      "type": "Optional[String[0]]", 
      "description": "Include external configuration file. Both, local path and URL is supported. Configuration file will be inserted at the position of the I(include=) line. Included files may contain further include lines. Yum will abort with an error if an inclusion loop is detected."
    }, 
    "sslcacert": {
      "type": "Optional[String[0]]", 
      "description": "Path to the directory containing the databases of the certificate authorities yum should use to verify SSL certificates."
    }, 
    "username": {
      "type": "Optional[String[0]]", 
      "description": "Username to use for basic authentication to a repo or really any url."
    }, 
    "metadata_expire": {
      "type": "Optional[String[0]]", 
      "description": "Time (in seconds) after which the metadata will expire."
    }, 
    "description": {
      "type": "Optional[String[0]]", 
      "description": "A human readable string describing the repository."
    }, 
    "state": {
      "type": "Optional[Enum[\"absent\", \"present\"]]", 
      "description": "State of the repo file."
    }, 
    "selevel": {
      "type": "Optional[String[0]]", 
      "description": "Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
    }, 
    "sslclientcert": {
      "type": "Optional[String[0]]", 
      "description": "Path to the SSL client certificate yum should use to connect to repos/remote sites."
    }, 
    "baseurl": {
      "type": "Optional[String[0]]", 
      "description": "URL to the directory where the yum repository's 'repodata' directory lives."
    }, 
    "gpgcakey": {
      "type": "Optional[String[0]]", 
      "description": "A URL pointing to the ASCII-armored CA key file for the repository."
    }, 
    "s3_enabled": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Enables support for S3 repositories."
    }, 
    "includepkgs": {
      "type": "Optional[String[0]]", 
      "description": "List of packages you want to only use from a repository. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed. Substitution variables (e.g. C($releasever)) are honored here."
    }, 
    "enablegroups": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Determines whether yum will allow the use of package groups for this repository."
    }, 
    "sslverify": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Defines whether yum should verify SSL certificates/hosts at all."
    }, 
    "password": {
      "type": "Optional[String[0]]", 
      "description": "Password to use with the username for basic authentication."
    }, 
    "ui_repoid_vars": {
      "type": "Optional[String[0]]", 
      "description": "When a repository id is displayed, append these yum variables to the string if they are used in the I(baseurl)/etc. Variables are appended in the order listed (and found)."
    }, 
    "protect": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Protect packages from updates from other repositories."
    }, 
    "ssl_check_cert_permissions": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Whether yum should check the permissions on the paths for the certificates on the repository (both remote and local)."
    }, 
    "throttle": {
      "type": "Optional[String[0]]", 
      "description": "Enable bandwidth throttling for downloads."
    }, 
    "name": {
      "type": "String[0]", 
      "description": "Unique repository ID."
    }, 
    "deltarpm_percentage": {
      "type": "Optional[String[0]]", 
      "description": "When the relative size of delta vs pkg is larger than this, delta is not used. Use C(0) to turn off delta rpm processing. Local repositories (with file:// I(baseurl)) have delta rpms turned off by default."
    }, 
    "sslclientkey": {
      "type": "Optional[String[0]]", 
      "description": "Path to the SSL client key yum should use to connect to repos/remote sites."
    }, 
    "metalink": {
      "type": "Optional[String[0]]", 
      "description": "Specifies a URL to a metalink file for the repomd.xml, a list of mirrors for the entire repository are generated by converting the mirrors for the repomd.xml file to a I(baseurl)."
    }, 
    "reposdir": {
      "type": "Optional[String[0]]", 
      "description": "Directory where the C(.repo) files will be stored."
    }, 
    "skip_if_unavailable": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "If set to C(yes) yum will continue running if this repository cannot be contacted for any reason. This should be set carefully as all repos are consulted for any given command."
    }, 
    "keepcache": {
      "type": "Optional[Enum[\"0\", \"1\"]]", 
      "description": "Either C(1) or C(0). Determines whether or not yum keeps the cache of headers and packages after successful installation."
    }, 
    "proxy_username": {
      "type": "Optional[String[0]]", 
      "description": "Password for this proxy."
    }, 
    "timeout": {
      "type": "Optional[String[0]]", 
      "description": "Number of seconds to wait for a connection before timing out."
    }, 
    "async": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "If set to C(yes) Yum will download packages and metadata from this repo in parallel, if possible."
    }, 
    "metadata_expire_filter": {
      "type": "Optional[Enum[\"never\", \"read-only:past\", \"read-only:present\", \"read-only:future\"]]", 
      "description": "Filter the I(metadata_expire) time, allowing a trade of speed for accuracy if a command doesn't require it. Each yum command can specify that it requires a certain level of timeliness quality from the remote repos. from \"I'm about to install/upgrade, so this better be current\" to \"Anything that's available is good enough\"."
    }, 
    "proxy": {
      "type": "Optional[String[0]]", 
      "description": "URL to the proxy server that yum should use. Set to C(_none_) to disable the global proxy setting."
    }
  }
}