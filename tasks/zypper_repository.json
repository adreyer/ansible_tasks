{
  "input_method": "stdin", 
  "description": "Add or remove Zypper repositories on SUSE and openSUSE", 
  "parameters": {
    "priority": {
      "type": "Optional[String[0]]", 
      "description": "Set priority of repository. Packages will always be installed from the repository with the smallest priority number."
    }, 
    "name": {
      "type": "Optional[String[0]]", 
      "description": "A name for the repository. Not required when adding repofiles."
    }, 
    "auto_import_keys": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Automatically import the gpg signing key of the new or changed repository."
    }, 
    "description": {
      "type": "Optional[String[0]]", 
      "description": "A description of the repository"
    }, 
    "enabled": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Set repository to enabled (or disabled)."
    }, 
    "disable_gpg_check": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Whether to disable GPG signature checking of all packages. Has an effect only if state is I(present)."
    }, 
    "repo": {
      "type": "Optional[String[0]]", 
      "description": "URI of the repository or .repo file. Required when state=present."
    }, 
    "state": {
      "type": "Optional[Enum[\"absent\", \"present\"]]", 
      "description": "A source string state."
    }, 
    "overwrite_multiple": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Overwrite multiple repository entries, if repositories with both name and URL already exist."
    }, 
    "runrefresh": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Refresh the package list of the given repository."
    }, 
    "autorefresh": {
      "type": "Optional[Enum[\"yes\", \"no\"]]", 
      "description": "Enable autorefresh of the repository."
    }
  }
}